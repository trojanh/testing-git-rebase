{"version":3,"sources":["goodcity/tests/acceptance/accept-test.js","goodcity/tests/acceptance/accept-test.jshint.js","goodcity/tests/acceptance/app-menu-test.js","goodcity/tests/acceptance/app-menu-test.jshint.js","goodcity/tests/acceptance/authorization-test.js","goodcity/tests/acceptance/authorization-test.jshint.js","goodcity/tests/acceptance/closed-offers-test.js","goodcity/tests/acceptance/closed-offers-test.jshint.js","goodcity/tests/acceptance/donor-details-test.js","goodcity/tests/acceptance/donor-details-test.jshint.js","goodcity/tests/acceptance/edit-images-test.js","goodcity/tests/acceptance/edit-images-test.jshint.js","goodcity/tests/acceptance/finished-test.js","goodcity/tests/acceptance/finished-test.jshint.js","goodcity/tests/acceptance/index-test.js","goodcity/tests/acceptance/index-test.jshint.js","goodcity/tests/acceptance/login-test.js","goodcity/tests/acceptance/login-test.jshint.js","goodcity/tests/acceptance/logistic-tab-test.js","goodcity/tests/acceptance/logistic-tab-test.jshint.js","goodcity/tests/acceptance/my-list-test.js","goodcity/tests/acceptance/my-list-test.jshint.js","goodcity/tests/acceptance/my-notifications-test.js","goodcity/tests/acceptance/my-notifications-test.jshint.js","goodcity/tests/acceptance/not-found-test.js","goodcity/tests/acceptance/not-found-test.jshint.js","goodcity/tests/acceptance/offers-test.js","goodcity/tests/acceptance/offers-test.jshint.js","goodcity/tests/acceptance/received-test.js","goodcity/tests/acceptance/received-test.jshint.js","goodcity/tests/acceptance/review-in-progress-test.js","goodcity/tests/acceptance/review-in-progress-test.jshint.js","goodcity/tests/acceptance/review-item-test.js","goodcity/tests/acceptance/review-item-test.jshint.js","goodcity/tests/acceptance/reviewer-item-messages-test.js","goodcity/tests/acceptance/reviewer-item-messages-test.jshint.js","goodcity/tests/acceptance/reviewer-item-status-message-test.js","goodcity/tests/acceptance/reviewer-item-status-message-test.jshint.js","goodcity/tests/acceptance/reviewer-offer-messages-test.js","goodcity/tests/acceptance/reviewer-offer-messages-test.jshint.js","goodcity/tests/acceptance/reviewer-offer-status-messages-test.js","goodcity/tests/acceptance/reviewer-offer-status-messages-test.jshint.js","goodcity/tests/acceptance/reviewer-offer-tab-test.js","goodcity/tests/acceptance/reviewer-offer-tab-test.jshint.js","goodcity/tests/acceptance/reviewer-reject-item-test.js","goodcity/tests/acceptance/reviewer-reject-item-test.jshint.js","goodcity/tests/acceptance/scheduled-test.js","goodcity/tests/acceptance/scheduled-test.jshint.js","goodcity/tests/acceptance/search-test.js","goodcity/tests/acceptance/search-test.jshint.js","goodcity/tests/acceptance/subscriptions-test.js","goodcity/tests/acceptance/subscriptions-test.jshint.js","goodcity/tests/app.jshint.js","goodcity/tests/components/add-holiday.jshint.js","goodcity/tests/components/auto-resize-textarea.jshint.js","goodcity/tests/components/cancel-offer.jshint.js","goodcity/tests/components/complete-receive-offer.jshint.js","goodcity/tests/components/complete-review-offer.jshint.js","goodcity/tests/components/custom-select2.jshint.js","goodcity/tests/components/focus-textfield.jshint.js","goodcity/tests/components/holiday-calender.jshint.js","goodcity/tests/components/holiday-detail.jshint.js","goodcity/tests/components/inactive-offer.jshint.js","goodcity/tests/components/inventory-number-input.jshint.js","goodcity/tests/components/offer-status-message.jshint.js","goodcity/tests/components/package-image.jshint.js","goodcity/tests/components/radio-text-input.jshint.js","goodcity/tests/components/receive-item.jshint.js","goodcity/tests/components/receive-menu.jshint.js","goodcity/tests/components/reject-message-field.jshint.js","goodcity/tests/components/schedule-selection.jshint.js","goodcity/tests/components/twilio-make-call.jshint.js","goodcity/tests/controllers/finished.jshint.js","goodcity/tests/controllers/finished/cancelled.jshint.js","goodcity/tests/controllers/finished/inactive.jshint.js","goodcity/tests/controllers/finished/received.jshint.js","goodcity/tests/controllers/holidays.jshint.js","goodcity/tests/controllers/in_progress.jshint.js","goodcity/tests/controllers/in_progress/reviewed.jshint.js","goodcity/tests/controllers/in_progress/reviewing.jshint.js","goodcity/tests/controllers/internet_call_status.jshint.js","goodcity/tests/controllers/item_types.jshint.js","goodcity/tests/controllers/my_list.jshint.js","goodcity/tests/controllers/my_list/finished.jshint.js","goodcity/tests/controllers/my_list/reviewed.jshint.js","goodcity/tests/controllers/my_list/reviewing.jshint.js","goodcity/tests/controllers/my_list/scheduled.jshint.js","goodcity/tests/controllers/my_notifications.jshint.js","goodcity/tests/controllers/notification_link.jshint.js","goodcity/tests/controllers/offer/cancel_gogovan.jshint.js","goodcity/tests/controllers/offer/donor_messages.jshint.js","goodcity/tests/controllers/offer/merge.jshint.js","goodcity/tests/controllers/offer/supervisor_messages.jshint.js","goodcity/tests/controllers/offer/transport_details.jshint.js","goodcity/tests/controllers/offers.jshint.js","goodcity/tests/controllers/offers/receiving.jshint.js","goodcity/tests/controllers/offers/submitted.jshint.js","goodcity/tests/controllers/receive_package.jshint.js","goodcity/tests/controllers/review_item.jshint.js","goodcity/tests/controllers/review_item/accept.jshint.js","goodcity/tests/controllers/review_item/donor_messages.jshint.js","goodcity/tests/controllers/review_item/reject.jshint.js","goodcity/tests/controllers/review_item/supervisor_messages.jshint.js","goodcity/tests/controllers/review_offer.jshint.js","goodcity/tests/controllers/review_offer/donor_details.jshint.js","goodcity/tests/controllers/review_offer/items.jshint.js","goodcity/tests/controllers/review_offer/logistics.jshint.js","goodcity/tests/controllers/review_offer/receive.jshint.js","goodcity/tests/controllers/scheduled.jshint.js","goodcity/tests/controllers/scheduled/collection.jshint.js","goodcity/tests/controllers/scheduled/gogovan.jshint.js","goodcity/tests/controllers/scheduled/other_delivery.jshint.js","goodcity/tests/controllers/search.jshint.js","goodcity/tests/controllers/search_label.jshint.js","goodcity/tests/controllers/user.jshint.js","goodcity/tests/controllers/users.jshint.js","goodcity/tests/factories/address.js","goodcity/tests/factories/address.jshint.js","goodcity/tests/factories/cancellation_reason.js","goodcity/tests/factories/cancellation_reason.jshint.js","goodcity/tests/factories/contact.js","goodcity/tests/factories/contact.jshint.js","goodcity/tests/factories/crossroads_transport.js","goodcity/tests/factories/crossroads_transport.jshint.js","goodcity/tests/factories/delivery.js","goodcity/tests/factories/delivery.jshint.js","goodcity/tests/factories/district.js","goodcity/tests/factories/district.jshint.js","goodcity/tests/factories/donor_condition.js","goodcity/tests/factories/donor_condition.jshint.js","goodcity/tests/factories/gogovan_order.js","goodcity/tests/factories/gogovan_order.jshint.js","goodcity/tests/factories/gogovan_transport.js","goodcity/tests/factories/gogovan_transport.jshint.js","goodcity/tests/factories/holiday.js","goodcity/tests/factories/holiday.jshint.js","goodcity/tests/factories/image.js","goodcity/tests/factories/image.jshint.js","goodcity/tests/factories/item.js","goodcity/tests/factories/item.jshint.js","goodcity/tests/factories/location.js","goodcity/tests/factories/location.jshint.js","goodcity/tests/factories/message.js","goodcity/tests/factories/message.jshint.js","goodcity/tests/factories/mobile.js","goodcity/tests/factories/mobile.jshint.js","goodcity/tests/factories/offer.js","goodcity/tests/factories/offer.jshint.js","goodcity/tests/factories/package.js","goodcity/tests/factories/package.jshint.js","goodcity/tests/factories/package_type.js","goodcity/tests/factories/package_type.jshint.js","goodcity/tests/factories/permission.js","goodcity/tests/factories/permission.jshint.js","goodcity/tests/factories/rejection_reason.js","goodcity/tests/factories/rejection_reason.jshint.js","goodcity/tests/factories/schedule.js","goodcity/tests/factories/schedule.jshint.js","goodcity/tests/factories/territory.js","goodcity/tests/factories/territory.jshint.js","goodcity/tests/factories/timeslot.js","goodcity/tests/factories/timeslot.jshint.js","goodcity/tests/factories/user.js","goodcity/tests/factories/user.jshint.js","goodcity/tests/factories/user_profile.js","goodcity/tests/factories/user_profile.jshint.js","goodcity/tests/factories/version.js","goodcity/tests/factories/version.jshint.js","goodcity/tests/helpers/custom-helpers.js","goodcity/tests/helpers/custom-helpers.jshint.js","goodcity/tests/helpers/destroy-app.js","goodcity/tests/helpers/destroy-app.jshint.js","goodcity/tests/helpers/ember-i18n/test-helpers.js","goodcity/tests/helpers/empty-sync-data-stub.js","goodcity/tests/helpers/empty-sync-data-stub.jshint.js","goodcity/tests/helpers/module-for-acceptance.js","goodcity/tests/helpers/module-for-acceptance.jshint.js","goodcity/tests/helpers/resolver.js","goodcity/tests/helpers/resolver.jshint.js","goodcity/tests/helpers/start-app.js","goodcity/tests/helpers/start-app.jshint.js","goodcity/tests/helpers/test-skip.js","goodcity/tests/helpers/test-skip.jshint.js","goodcity/tests/mixins/back_navigator.jshint.js","goodcity/tests/mixins/scheduled_offers.jshint.js","goodcity/tests/models/location.jshint.js","goodcity/tests/models/package.jshint.js","goodcity/tests/models/package_image.jshint.js","goodcity/tests/models/package_type.jshint.js","goodcity/tests/resolver.jshint.js","goodcity/tests/router.jshint.js","goodcity/tests/routes/authenticate.jshint.js","goodcity/tests/routes/finished/cancelled.jshint.js","goodcity/tests/routes/finished/inactive.jshint.js","goodcity/tests/routes/finished/index.jshint.js","goodcity/tests/routes/finished/received.jshint.js","goodcity/tests/routes/ggv_orders.jshint.js","goodcity/tests/routes/holidays.jshint.js","goodcity/tests/routes/in_progress/index.jshint.js","goodcity/tests/routes/in_progress/reviewed.jshint.js","goodcity/tests/routes/in_progress/reviewing.jshint.js","goodcity/tests/routes/item_types.jshint.js","goodcity/tests/routes/my_list/finished.jshint.js","goodcity/tests/routes/my_list/index.jshint.js","goodcity/tests/routes/my_list/reviewed.jshint.js","goodcity/tests/routes/my_list/reviewing.jshint.js","goodcity/tests/routes/my_list/scheduled.jshint.js","goodcity/tests/routes/my_notifications.jshint.js","goodcity/tests/routes/offer.jshint.js","goodcity/tests/routes/offer/donor_messages.jshint.js","goodcity/tests/routes/offer/index.jshint.js","goodcity/tests/routes/offer/merge.jshint.js","goodcity/tests/routes/offer/supervisor_messages.jshint.js","goodcity/tests/routes/offers.jshint.js","goodcity/tests/routes/offers/index.jshint.js","goodcity/tests/routes/offers/receiving.jshint.js","goodcity/tests/routes/offers/submitted.jshint.js","goodcity/tests/routes/receive_package.jshint.js","goodcity/tests/routes/review_item.jshint.js","goodcity/tests/routes/review_item/accept.jshint.js","goodcity/tests/routes/review_item/donor_messages.jshint.js","goodcity/tests/routes/review_item/index.jshint.js","goodcity/tests/routes/review_item/reject.jshint.js","goodcity/tests/routes/review_item/supervisor_messages.jshint.js","goodcity/tests/routes/review_offer.jshint.js","goodcity/tests/routes/review_offer/donor_details.jshint.js","goodcity/tests/routes/review_offer/index.jshint.js","goodcity/tests/routes/review_offer/items.jshint.js","goodcity/tests/routes/review_offer/logistics.jshint.js","goodcity/tests/routes/review_offer/receive.jshint.js","goodcity/tests/routes/scheduled/collection.jshint.js","goodcity/tests/routes/scheduled/gogovan.jshint.js","goodcity/tests/routes/scheduled/index.jshint.js","goodcity/tests/routes/scheduled/other_delivery.jshint.js","goodcity/tests/routes/search.jshint.js","goodcity/tests/routes/search_label.jshint.js","goodcity/tests/routes/session.jshint.js","goodcity/tests/routes/user.jshint.js","goodcity/tests/routes/users.jshint.js","goodcity/tests/test-helper.js","goodcity/tests/test-helper.jshint.js","goodcity/tests/unit/models/item-test.js","goodcity/tests/unit/models/item-test.jshint.js","goodcity/tests/unit/models/offer-test.js","goodcity/tests/unit/models/offer-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('goodcity/tests/acceptance/accept-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer, item1, item2, package1, package2, item3, package3, item4, package4;\n\n  module('Reviewer: Accept Item Tab', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item1 = _emberDataFactoryGuy['default'].make(\"item_with_type\", { offer: offer, state: \"accepted\" });\n      package1 = _emberDataFactoryGuy['default'].make(\"package\", { item: item1, packageType: item1.get('packageType') });\n      package2 = _emberDataFactoryGuy['default'].make(\"package\", { item: item1, packageType: item1.get('packageType') });\n\n      item2 = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer });\n\n      item3 = _emberDataFactoryGuy['default'].make(\"item_with_type\", { offer: offer, donorDescription: null, donorCondition: null });\n      package3 = _emberDataFactoryGuy['default'].make(\"package\", { item: item3, packageType: item3.get('packageType') });\n\n      item4 = _emberDataFactoryGuy['default'].make(\"item_with_type\", { offer: offer, state: \"rejected\" });\n      package4 = _emberDataFactoryGuy['default'].make(\"package\", { item: item4, packageType: item4.get('packageType') });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"visit accept item tab without item_type\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item2.id + \"/accept\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item2.id + \"/accept\");\n      equal($('input[disabled]').val(), \"\");\n      equal($('p.no-items').text(), \"Please choose Item Type first!\");\n    });\n  });\n\n  test(\"visit accepted item with item_type\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/accept\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/accept\");\n      equal($('input[disabled]').val(), item1.get('packageType.name'));\n\n      // two package components\n      equal($(\".detail_container\").length, 2);\n\n      // display name of selected package type\n      equal($.trim($(\".detail_container:eq(0)\").text()).indexOf(package1.get('packageType.name')) > 0, true);\n\n      equal($.trim($(\".detail_container:eq(1)\").text()).indexOf(package2.get('packageType.name')) > 0, true);\n\n      // display package component notes\n      equal($(\".detail_container:eq(0) input[name='comment']\").val(), package1.get('notes'));\n      equal($(\".detail_container:eq(1) input[name='comment']\").val(), package2.get('notes'));\n\n      // display quantity value\n      equal(parseInt($(\".detail_container:eq(0) input[name='qty']\").val()), package1.get('quantity'));\n      equal(parseInt($(\".detail_container:eq(1) input[name='qty']\").val()), package2.get('quantity'));\n\n      // display length value\n      equal(parseInt($(\".detail_container:eq(0) input[name='length']\").val()), package1.get('length'));\n      equal(parseInt($(\".detail_container:eq(1) input[name='length']\").val()), package2.get('length'));\n\n      // display width value\n      equal(parseInt($(\".detail_container:eq(0) input[name='width']\").val()), package1.get('width'));\n      equal(parseInt($(\".detail_container:eq(1) input[name='width']\").val()), package2.get('width'));\n\n      // display height value\n      equal(parseInt($(\".detail_container:eq(0) input[name='height']\").val()), package1.get('height'));\n      equal(parseInt($(\".detail_container:eq(1) input[name='height']\").val()), package2.get('height'));\n\n      // Display buttons\n      equal($(\".accept_buttons button\").length, 1);\n\n      // Item Details\n      equal($(\".edit-item-link\").length, 1);\n      equal($('.item-details textarea').length, 0);\n      equal($('.item-details .radio-buttons li').length, 0);\n\n      // Display Item Details Form\n      click($(\".edit-item-link\"));\n      andThen(function () {\n        equal($('.item-details textarea').val(), item1.get('donorDescription'));\n        equal($('.item-details .radio-buttons li').length, 4);\n      });\n    });\n  });\n\n  test(\"visit submitted item with item_type\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item3.id + \"/accept\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item3.id + \"/accept\");\n      equal($('input[disabled]').val(), item3.get('packageType.name'));\n\n      // one package components\n      equal($(\".detail_container\").length, 1);\n\n      // Display buttons\n      equal($(\".accept_buttons button\").length, 2);\n\n      // Item Details Form\n      equal($('.item-details textarea').val(), \"\");\n      equal($('.item-details .radio-buttons li').length, 4);\n    });\n  });\n\n  test(\"visit rejected item with item_type\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item4.id + \"/accept\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item4.id + \"/accept\");\n      equal($('input[disabled]').val(), item4.get('packageType.name'));\n\n      // one package components\n      equal($(\".detail_container\").length, 1);\n\n      // Display buttons\n      equal($(\".accept_buttons button\").length, 2);\n    });\n  });\n\n  test(\"visit rejected item page\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item4.id + \"/reject\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item4.id + \"/reject\");\n      equal($('input[disabled]').val(), item4.get('packageType.name'));\n\n      // hide item-edit link\n      equal($(\".edit-item-link\").length, 0);\n    });\n  });\n});","define('goodcity/tests/acceptance/accept-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/accept-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/accept-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/app-menu-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer, offer1, reviewer1;\n\n  module('App Menu', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      reviewer1 = _emberDataFactoryGuy['default'].make(\"user\", { isReviwer: true });\n      window.localStorage.currentUserId = reviewer1.id;\n      offer = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"under_review\", reviewed_by: reviewer1 });\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"is_reviewed\", reviewed_by: reviewer1 });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"In progress tab count\", function () {\n    visit(\"/offers/in_progress/reviewing\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/in_progress/reviewing\");\n      equal(find('a[href=\"/offers/in_progress\"]').text(), \"In Progress (2)\");\n    });\n  });\n});","define('goodcity/tests/acceptance/app-menu-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/app-menu-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/app-menu-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/authorization-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app'], function (exports, _ember, _goodcityTestsHelpersStartApp) {\n\n  var App;\n\n  module('Authorization', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 1);\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"On restricted page doesn't redirect if staff\", function () {\n    visit('/offers');\n\n    andThen(function () {\n      equal(currentURL(), '/offers/submitted');\n    });\n  });\n});","define('goodcity/tests/acceptance/authorization-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/authorization-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/authorization-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/closed-offers-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer, item;\n\n  module('Closed Offer', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"closed\" });\n      item = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"display closed offer with rejected items\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_offer/items\");\n      equal(find(\".reject_badge\").length, 1);\n    });\n  });\n\n  test(\"display logistics tab of closed offer\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_offer/logistics\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_offer/logistics\");\n\n      var logistics_text = $.trim($('.noTransportItems').text().replace(/\\s+/g, \" \"));\n      equal(logistics_text, \"No items to transport. This offer is closed now.\");\n    });\n  });\n});","define('goodcity/tests/acceptance/closed-offers-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/closed-offers-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/closed-offers-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/donor-details-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, user, offer1, offer2, offer3, offer4;\n\n  module('Reviewer: Display Donor Details Tab', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      user = _emberDataFactoryGuy['default'].make(\"user\");\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"under_review\", createdBy: user });\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"submitted\", createdBy: user });\n      offer3 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"received\", createdBy: user });\n      offer4 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"draft\", createdBy: user });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"verify donor details\", function () {\n\n    $.mockjax({ url: \"/api/v1/twilio_outbound/generate_call_toke*\", responseText: {} });\n    window.Twilio = {\n      Device: {\n        setup: function setup() {},\n        error: function error() {},\n        disconnectAll: function disconnectAll() {},\n        disconnect: function disconnect() {}\n      }\n    };\n\n    window.webkitRTCPeerConnection = true;\n\n    visit(\"/offers/1/review_offer/donor_details\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/1/review_offer/donor_details\");\n\n      equal($(\".donor_details .no-avatar\").text(), \"K\");\n      equal($(\".donor_details .donor\").text().indexOf('Kendrick Kiehn') >= 0, true);\n      equal($.trim($(\".donor_details .donor\").text()).indexOf('5111 1111') >= 0, true);\n      equal($(\".donor_details li\").length, 3);\n      equal($.trim($(\".donor_details .row .row:eq(5)\").text()).indexOf('Total offers') >= 0, true);\n      equal($.trim($(\".donor_details .row .row:eq(5)\").text()).indexOf('4') >= 0, true);\n    });\n  });\n});","define('goodcity/tests/acceptance/donor-details-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/donor-details-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/donor-details-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/edit-images-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer;\n\n  module('Add new Item', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      offer = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"under_review\" });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"create without Image\", function () {\n    visit(\"/offers/\" + offer.id + \"/items/new/edit_images\");\n\n    andThen(function () {\n      equal($(\".noImage a:contains('Cannot provide photo')\").length, 1);\n      click(find(\"a:contains('Cannot provide photo')\"));\n      andThen(function () {\n        equal(currentURL(), \"/offers/101/review_item/3/accept\");\n      });\n    });\n  });\n});","define('goodcity/tests/acceptance/edit-images-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/edit-images-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/edit-images-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/finished-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper', 'goodcity/tests/helpers/custom-helpers'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper, _goodcityTestsHelpersCustomHelpers) {\n\n  var App, reviewer, offer1, item1, offer2;\n\n  module('Finished Offers', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      reviewer = _emberDataFactoryGuy['default'].make('user', { id: 3 });\n\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"closed\", reviewedBy: reviewer });\n      item1 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer1 });\n\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"received\", reviewedBy: reviewer });\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"redirect to finished offers page\", function () {\n    visit(\"/offers/finished\");\n\n    andThen(function () {\n\n      var assertions = function assertions() {\n        equal(currentURL(), \"/offers/finished/received\");\n        equal(find(\"ul.list li\").length, 2);\n        equal(find(\"ul.list img\").length, 1);\n\n        // under-review status\n        equal($('.time_indicator').text().indexOf('Received by ') > 0, true);\n        var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n\n        // items accept-reject status\n        equal(itemStatus, \" 0 Received, 0 missing, 0 rejected \");\n      };\n\n      runloopFix(assertions);\n    });\n  });\n\n  test(\"redirect to cancelled offers page\", function () {\n    visit(\"/offers/finished/cancelled\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/finished/cancelled\");\n      equal(find(\"ul.list li\").length, 2);\n      equal(find(\"ul.list img\").length, 1);\n\n      // cancelled status\n      equal($('.time_indicator').text().indexOf('Closed') > 0, true);\n\n      // items accept-reject status\n      var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n      equal(itemStatus, \" 0 Accepted, 1 rejected, 0 pending \");\n    });\n  });\n});","define('goodcity/tests/acceptance/finished-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/finished-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/finished-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/index-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app'], function (exports, _ember, _goodcityTestsHelpersStartApp) {\n\n  var App;\n\n  module('Home Page', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 1);\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"redirect to offers page if logged-in as Reviewer\", function () {\n    App = (0, _goodcityTestsHelpersStartApp['default'])({}, 1);\n    visit(\"/\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/my_list/reviewing\");\n    });\n  });\n\n  test(\"redirect to offers page if logged-in as Supervisor\", function () {\n    App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n    visit(\"/\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/submitted\");\n    });\n  });\n\n  test(\"redirect to login page if try to visit home page\", function () {\n    App = (0, _goodcityTestsHelpersStartApp['default'])();\n    lookup('service:session').set('authToken', null);\n\n    visit(\"/\");\n\n    andThen(function () {\n      equal(currentURL(), \"/login\");\n    });\n  });\n});","define('goodcity/tests/acceptance/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/index-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/index-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/login-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'goodcity/tests/factories/user_profile', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _goodcityTestsFactoriesUser_profile, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, hk_user, non_hk_user;\n\n  module('Acceptance: Login', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      hk_user = _emberDataFactoryGuy['default'].make('with_hk_mobile');\n      non_hk_user = _emberDataFactoryGuy['default'].make('with_non_hk_mobile');\n\n      lookup(\"controller:subscriptions\").pusher = {\n        get: function get() {\n          return {};\n        },\n        wire: function wire() {}\n      };\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"User able to enter mobile number and get the sms code\", function () {\n    expect(1);\n    logoutUser('/login');\n    fillIn('#mobile', hk_user.get(\"mobile\"));\n    triggerEvent('#mobile', 'blur');\n    click(\"#getsmscode\");\n\n    andThen(function () {\n      equal(currentURL(), \"/authenticate\");\n    });\n  });\n\n  test(\"User is able to enter sms code and confirm and redirected to offers\", function () {\n    expect(2);\n\n    var authToken = window.localStorage.authToken;\n    logoutUser('/authenticate');\n    visit('/authenticate');\n    fillIn('#pin', \"1234\");\n    triggerEvent('#pin', 'blur');\n\n    andThen(function () {\n      equal(find('#pin').val().length, 4);\n      window.localStorage.authToken = authToken;\n    });\n\n    click(\"#submit_pin\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/submitted\");\n    });\n  });\n\n  test(\"Logout clears authToken\", function () {\n    expect(1);\n\n    visit(\"/offers\");\n    click(\"a:contains('Logout')\");\n    andThen(function () {\n      equal(typeof window.localStorage.authToken, \"undefined\");\n    });\n  });\n\n  test(\"User is able to resend the sms code\", function () {\n    expect(1);\n\n    $.mockjax({ url: \"/api/v1/auth/send_pi*\", responseText: {\n        \"otp_auth_key\": \"/JqONEgEjrZefDV3ZIQsNA==\"\n      } });\n\n    logoutUser('/authenticate');\n    visit('/authenticate');\n\n    click(\"#resend-pin\");\n\n    andThen(function () {\n      equal(window.localStorage.otpAuthKey, '\"/JqONEgEjrZefDV3ZIQsNA==\"');\n    });\n  });\n});","define('goodcity/tests/acceptance/login-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/login-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/login-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/logistic-tab-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer, item, reviewer, offer2, item2, offer3, item3, delivery1, ggv_order1, offer5, item5, delivery2, ggv_order2, offer6, item6, offer7, t;\n\n  module('Review Offer Logistics', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      lookup('service:session').set('isAdmin', true);\n      var i18n = App.__container__.lookup('service:i18n');\n      t = i18n.t.bind(i18n);\n\n      reviewer = _emberDataFactoryGuy['default'].make(\"user\");\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\", reviewedBy: reviewer });\n      item = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer, state: \"submitted\" });\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"scheduled\" });\n      item2 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer2 });\n\n      offer3 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item3 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer3 });\n\n      ggv_order1 = _emberDataFactoryGuy['default'].make(\"gogovan_order\");\n      delivery1 = _emberDataFactoryGuy['default'].make(\"delivery\", { deliveryType: \"Gogovan\", gogovanOrder: ggv_order1 });\n      offer5 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"scheduled\", delivery: delivery1 });\n      item5 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer5 });\n\n      ggv_order2 = _emberDataFactoryGuy['default'].make(\"gogovan_active_order\", { ggvUuid: \"123456\", bookingId: \"654321\", driverMobile: \"12345678\" });\n      delivery2 = _emberDataFactoryGuy['default'].make(\"delivery\", { deliveryType: \"Gogovan\", gogovanOrder: ggv_order2 });\n      offer6 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"scheduled\", delivery: delivery2 });\n      item6 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer6 });\n\n      offer7 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"received\", deliveredBy: \"Gogovan\" });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"for pending review of items\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_offer/logistics\");\n\n    andThen(function () {\n      equal($.trim($('p.no-items').text()), \"Please finish reviewing items first!\");\n    });\n  });\n\n  test(\"for completed review of items\", function () {\n    visit(\"/offers/4/review_offer/logistics\");\n\n    andThen(function () {\n      equal($(\".info-text\").text(), \"Please complete review first\");\n    });\n  });\n\n  test(\"for rejected offer-items\", function () {\n    visit('/offers/' + offer3.id + \"/review_offer/logistics\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer3.id + \"/review_offer/logistics\");\n      equal($(\".info-text\").text(), \"No items to transport.\");\n    });\n  });\n\n  test(\"for scheduled offer\", function () {\n    visit('/offers/' + offer2.id + \"/review_offer/logistics\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer2.id + \"/review_offer/logistics\");\n\n      equal($.trim($(\".delivery-details .row:eq(5)\").text()), \"Accepted items to be transported\");\n      equal($(\".items_list img\").length, 1);\n      equal($('.transport-buttons a').length, 2);\n    });\n  });\n\n  test(\"cancel booking of scheduled offer with pending GGV order state\", function () {\n    // todo: remove workaround for message box button actions not firing only under test environment\n    lookup(\"service:messageBox\").custom = function (message, btn1Text, btn1Callback, btn2Text, btn2Callback) {\n      btn2Callback();\n    };\n\n    visit('/offers/' + offer5.id + \"/review_offer/logistics\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer5.id + \"/review_offer/logistics\");\n    });\n\n    click(\"a:contains('Cancel Booking')\");\n    // confirm prompt invoked, ok automatically called with above workaround\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer5.id + \"/review_offer/items\");\n    });\n  });\n\n  test(\"cancel booking of scheduled offer with active GGV order state\", function () {\n    visit('/offers/' + offer6.id + \"/review_offer/logistics\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer6.id + \"/review_offer/logistics\");\n\n      click(find(\"a:contains('Cancel Booking')\"));\n      andThen(function () {\n        equal(currentURL(), \"/offers/\" + offer6.id + \"/delivery/\" + delivery2.id + \"/cancel_booking\");\n      });\n    });\n  });\n\n  test(\"for scheduled offer with pending GGV order state\", function () {\n    visit('/offers/' + offer5.id + \"/review_offer/logistics\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer5.id + \"/review_offer/logistics\");\n\n      equal($.trim($(\".delivery-details .row:eq(0)\").text()).indexOf('Awaiting Driver Confirmation') >= 0, true);\n      equal($.trim($(\".delivery-details .row:eq(0)\").text()).indexOf('Driver & vehicle details will appear here once a driver accepts your booking.') > 0, true);\n\n      equal($.trim($('.delivery-details .row:eq(3)').text()), \"Accepted items to be transported\");\n      equal($(\".items_list img\").length, 1);\n      equal($('.transport-buttons a').length, 2);\n    });\n  });\n\n  test(\"for scheduled offer with active GGV order state\", function () {\n    visit('/offers/' + offer6.id + \"/review_offer/logistics\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer6.id + \"/review_offer/logistics\");\n\n      equal($.trim($(\".transport-content .row:eq(0)\").text()).indexOf('Booking Confirmed') >= 0, true);\n\n      // driver name\n      equal($.trim($(\".delivery-details .gogovan_status .row:eq(0)\").text()).indexOf(ggv_order2.get('driverName')) > 0, true);\n\n      // driver mobile\n      equal($.trim($(\".delivery-details .gogovan_status\").text()).indexOf(\"1234 5678\") > 0, true);\n\n      // driver License\n      equal($.trim($(\".delivery-details .gogovan_status .row:eq(2)\").text()).indexOf(ggv_order2.get('driverLicense')) > 0, true);\n\n      equal($.trim($(\".delivery-details .gogovan_status .row:eq(3)\").text()).indexOf(ggv_order2.get('price')) > 0, true);\n\n      equal($.trim($('.delivery-details .row:eq(7)').text()), \"Accepted items to be transported\");\n      equal($(\".items_list img\").length, 1);\n      equal($('.transport-buttons a').length, 2);\n\n      equal($(\".booking-id div:first\").text().trim(), t(\"delivery_details.id\"));\n      equal($(\".booking-id div:last\").text().trim().indexOf(\"654321\") >= 0, true);\n      equal($(\".booking-id div:last a\").text().trim().indexOf(t(\"delivery_details.driver_screen\")) >= 0, true);\n      equal($(\".delivery-details .row:eq(9) div a\").text().trim().indexOf(\"Driver Screen\") >= 0, true);\n    });\n  });\n\n  test(\"for received offer\", function () {\n    visit('/offers/' + offer7.id + \"/review_offer/logistics\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer7.id + \"/review_offer/logistics\");\n      var text = $(\".transport-content div:first\").text().trim();\n      equal(text.indexOf(\"Goods received on\") >= 0, true);\n      equal(text.indexOf(\"via Gogovan\") >= 0, true);\n    });\n  });\n});","define('goodcity/tests/acceptance/logistic-tab-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/logistic-tab-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/logistic-tab-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/my-list-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer1, reviewer, reviewerName, offer2, item1, item2, delivery, offer3, item3, item4, offer4, item5, ggv_order;\n\n  module('My Offers', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      reviewer = _emberDataFactoryGuy['default'].make('user', { id: 3 });\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"under_review\", reviewedBy: reviewer });\n      reviewerName = reviewer.get('firstName') + \" \" + reviewer.get('lastName');\n\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"reviewed\", reviewedBy: reviewer });\n      item1 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer2 });\n      item2 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer2 });\n\n      ggv_order = _emberDataFactoryGuy['default'].make(\"gogovan_order\", { status: \"pending\" });\n      delivery = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Gogovan\", gogovanOrder: ggv_order });\n      offer3 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"scheduled\", delivery: delivery, reviewedBy: reviewer });\n      item3 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer3 });\n      item4 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer3 });\n\n      offer4 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"closed\", reviewedBy: reviewer });\n      item5 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer4 });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"redirect to reviewing offers page\", function () {\n    visit(\"/offers/my_list\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/my_list/reviewing\");\n      equal(find(\"ul.list li\").length, 1);\n      equal(find(\"ul.list img\").length, 1);\n\n      // under-review status\n      equal($('.time_indicator').text().indexOf('Started by ') > 0, true);\n      var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n\n      // items accept-reject status\n      equal(itemStatus, \" 0 Accepted, 0 rejected, 2 pending \");\n    });\n  });\n\n  test(\"redirect to reviewed offers page\", function () {\n    visit(\"/offers/my_list/reviewed\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/my_list/reviewed\");\n      equal(find(\"ul.list li\").length, 1);\n      equal(find(\"ul.list img\").length, 1);\n\n      // reviewed status\n      equal($('.time_indicator').text().indexOf('Reviewed') > 0, true);\n      equal($('.time_indicator').text().indexOf('User to plan transport.') > 0, true);\n\n      // items accept-reject status\n      var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n      equal(itemStatus, \" 1 Accepted, 1 rejected, 0 pending \");\n    });\n  });\n\n  test(\"redirect to scheduled offers page\", function () {\n    visit(\"/offers/my_list/scheduled\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/my_list/scheduled\");\n      equal(find(\"ul.list li\").length, 1);\n      equal(find(\"ul.list img\").length, 1);\n\n      // scheduled status\n      equal($('.time_indicator').text().indexOf('Van ordered') >= 0, true);\n\n      // items accept-reject status\n      var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n      equal(itemStatus, \" 1 Accepted, 1 rejected, 0 pending \");\n    });\n  });\n\n  test(\"redirect to finished offers page\", function () {\n    visit(\"/offers/my_list/finished\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/my_list/finished\");\n      equal(find(\"ul.list li\").length, 2);\n      equal(find(\"ul.list img\").length, 1);\n\n      // reviewed status\n      equal($('.time_indicator').text().indexOf('Closed') > 0, true);\n\n      // items accept-reject status\n      var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n      equal(itemStatus, \" 0 Accepted, 1 rejected, 0 pending \");\n    });\n  });\n});","define('goodcity/tests/acceptance/my-list-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/my-list-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/my-list-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/my-notifications-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper', 'goodcity/tests/helpers/custom-helpers'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper, _goodcityTestsHelpersCustomHelpers) {\n  // import syncDataStub from '../helpers/empty-sync-data-stub';\n\n  var App, offer, item, message1, message2, message3, message4, message5;\n\n  module('Reviewer: Notifications', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item = _emberDataFactoryGuy['default'].make(\"item\", { state: \"submitted\", offer: offer });\n      message1 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item });\n      message2 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item, body: \"Message from Donor\" });\n      message3 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item, body: \"Message from Supervisor\", isPrivate: true, state: \"read\" });\n      message4 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: null, body: \"General Message for offer\" });\n      message5 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: null, state: \"read\", isPrivate: true });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"display threads with icons and unread message count\", function () {\n    visit('/my_notifications');\n    andThen(function () {\n      var assertions = function assertions() {\n        //Item thread with donor\n        var item_thread = $(\".thread:first\");\n        //item image, unread count and heading\n        equal($(item_thread).find(\".thread_image img\").length > 0, true);\n        equal($(item_thread).find(\".unread_length\").text(), 2);\n        equal($(item_thread).find(\".message-text\").text().indexOf(item.get(\"donorDescription\")) >= 0, true);\n\n        //Item thread with supervisor\n        var item_private_thread = $(\".thread\")[1];\n        //group icon, unread count and message\n        equal($(item_private_thread).find(\".fa-users\").length > 0, true);\n        equal($(item_private_thread).find(\".unread_length\").length, 0);\n        equal($(item_private_thread).find(\".thread_last_message\").text().trim(), message3.get(\"body\"));\n\n        //Offer thread message with donor\n        var offer_thread = $(\".thread\")[2];\n        //thread icon and heading\n        equal($(offer_thread).find(\".thread_image .fa-bullhorn\").length > 0, true);\n        equal($(offer_thread).find(\".message-text\").text().trim().indexOf(offer.get(\"createdBy.fullName\") + \"'s Offer\") >= 0, true);\n\n        // PENDING: not rendering last thread\n        // Offer with supervisor\n        // var offer_private_thread = $(\".thread\")[3];\n        // equal($(offer_thread).find(\".fa-bullhorn\").length > 0, true);\n        // equal($(offer_private_thread).find(\".fa-users\").length > 0, true);\n      };\n\n      runloopFix(assertions);\n    });\n  });\n\n  test(\"display unread notification count on notification-bell icon\", function () {\n    visit('/offers');\n    andThen(function () {\n      equal(currentURL(), \"/offers/submitted\");\n      equal($(\"span.unread .unread_length\").text(), 3);\n    });\n  });\n\n  test(\"redirect to notifications page on click of notification-bell icon\", function () {\n    visit('/offers');\n    andThen(function () {\n      equal(currentURL(), \"/offers/submitted\");\n      equal($(\"span.unread .unread_length\").text(), 3);\n\n      click(\"a.all_unread_messages_count\");\n      andThen(function () {\n        equal(currentURL(), \"/my_notifications\");\n      });\n    });\n  });\n\n  test(\"filter unread notifications\", function () {\n    visit(\"/my_notifications\");\n    andThen(function () {\n      var assertions = function assertions() {\n        equal(currentURL(), \"/my_notifications\");\n\n        click(\".my-notifications a:eq(0)\");\n        andThen(function () {\n          equal($(\".thread\").length, 2);\n        });\n      };\n\n      runloopFix(assertions);\n    });\n  });\n});","define('goodcity/tests/acceptance/my-notifications-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/my-notifications-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/my-notifications-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/not-found-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'goodcity/tests/helpers/test-skip', 'ember-data-factory-guy'], function (exports, _ember, _goodcityTestsHelpersStartApp, _goodcityTestsHelpersTestSkip, _emberDataFactoryGuy) {\n\n  var App, offer, t;\n\n  module('Display not found error', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])();\n      _ember['default'].run.later = function () {\n        return true;\n      };\n      offer = _emberDataFactoryGuy['default'].make(\"offer\");\n      var i18n = App.__container__.lookup('service:i18n');\n      t = i18n.t.bind(i18n);\n      App.__container__.lookup(\"service:logger\").error = function () {};\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  // Test cases with responses as error-statuscodes fails\n  // https://github.com/emberjs/ember.js/issues/12791\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"Display error popup for invalid offer\", function () {\n    $('.reveal-modal').remove();\n    visit(\"/offers/invalid/review_offer/items\");\n\n    andThen(function () {\n      equal(_ember['default'].$(\"#messageBoxText\").text(), t(\"404_error\").toString());\n      _ember['default'].$('#errorModal').foundation('reveal', 'close');\n    });\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"Display error popup for invalid item\", function () {\n    $('.reveal-modal').remove();\n    visit(\"/offers/\" + offer.id + \"/review_item/invalid/accept\");\n    $.mockjax({ url: \"/api/v1/items/*\", status: 404 });\n\n    andThen(function () {\n      equal(_ember['default'].$(\"#messageBoxText\").text(), t(\"404_error\").toString());\n      _ember['default'].$('#errorModal').foundation('reveal', 'close');\n    });\n  });\n\n  test(\"Display not-found page for invalid url\", function () {\n    $('.reveal-modal').remove();\n    visit(\"/invalid_url\");\n    andThen(function () {\n      equal(currentURL(), \"/invalid_url\");\n      notEqual(_ember['default'].$(\".xy-center\").text().indexOf(t(\"not_found\")), -1, \"not found message found\");\n    });\n  });\n});","define('goodcity/tests/acceptance/not-found-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/not-found-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/not-found-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/offers-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'goodcity/tests/helpers/custom-helpers'], function (exports, _ember, _goodcityTestsHelpersStartApp, _goodcityTestsHelpersCustomHelpers) {\n\n  var App;\n\n  module('Submitted Offers', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"redirect to offers page\", function () {\n    visit(\"/offers\");\n\n    andThen(function () {\n\n      var assertions = function assertions() {\n        equal(currentURL(), \"/offers/submitted\");\n        equal(find(\"ul.list li\").length, 1);\n        equal(find(\"ul.list img\").length, 1);\n\n        // submitted status\n        equal($('.time_indicator').text().indexOf('Submitted') > 0, true);\n        var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n\n        // items accept-reject status\n        equal(itemStatus, \" 0 Accepted, 0 rejected, 1 pending \");\n      };\n\n      runloopFix(assertions);\n    });\n  });\n\n  test(\"display submitted offer\", function () {\n    visit(\"/offers\");\n\n    andThen(function () {\n      var assertions = function assertions() {\n\n        equal(currentURL(), \"/offers/submitted\");\n        click(\"ul.list li:first a\");\n        andThen(function () {\n          equal(currentURL(), \"/offers/3/review_offer/items\");\n          equal(find(\"a:contains('Start Review')\").length, 1);\n        });\n      };\n\n      runloopFix(assertions);\n    });\n  });\n});","define('goodcity/tests/acceptance/offers-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/offers-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/offers-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/received-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer1, item1, package1, package2, package3;\n\n  module('Received Offers', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      item1 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\" });\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"received\", items: [item1] });\n      package1 = _emberDataFactoryGuy['default'].make(\"package\", { offerId: parseInt(offer1.id), state: \"received\", item: item1 });\n      package2 = _emberDataFactoryGuy['default'].make(\"package\", { offerId: parseInt(offer1.id), state: \"expecting\", item: item1 });\n      package3 = _emberDataFactoryGuy['default'].make(\"package\", { offerId: parseInt(offer1.id), state: \"missing\", item: item1 });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"expecting, received and missing count\", function () {\n    visit(\"/offers/\" + offer1.id + \"/review_offer/receive\");\n\n    andThen(function () {\n      //expecting\n      var href = \"/offers/\" + offer1.id + \"/review_offer/receive\";\n      equal($('a[href=\"' + href + '\"]:last').text().trim(), \"Expecting(1)\");\n      //received\n      var href1 = href + \"?state=received\";\n      equal($('a[href=\"' + href1 + '\"]:last').text().trim(), \"Received(1)\");\n      //missing\n      href1 = href + \"?state=missing\";\n      equal($('a[href=\"' + href1 + '\"]').text().trim(), \"Missing(1)\");\n    });\n  });\n});","define('goodcity/tests/acceptance/received-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/received-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/received-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/review-in-progress-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper', 'goodcity/tests/helpers/custom-helpers'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper, _goodcityTestsHelpersCustomHelpers) {\n\n  var App, offer1, reviewer, reviewerName, offer2, item1, item2;\n\n  module('In Review Offers', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      reviewer = _emberDataFactoryGuy['default'].make('user', { id: 3 });\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"under_review\", reviewedBy: reviewer });\n      reviewerName = reviewer.get('firstName') + \" \" + reviewer.get('lastName');\n\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"reviewed\", reviewedBy: reviewer });\n      item1 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer2 });\n      item2 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer2 });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"redirect to reviewing offers page\", function () {\n    visit(\"/offers/in_progress\");\n\n    andThen(function () {\n      var assertions = function assertions() {\n        equal(currentURL(), \"/offers/in_progress/reviewing\");\n        equal(find(\"ul.list li\").length, 2);\n        equal(find(\"ul.list img\").length, 2);\n\n        // under-review status\n        equal($('.time_indicator').text().indexOf('Started by ') > 0, true);\n        var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n\n        equal(itemStatus, \" 0 Accepted, 0 rejected, 2 pending \");\n      };\n\n      runloopFix(assertions);\n    });\n  });\n\n  test(\"redirect to reviewed offers page\", function () {\n    visit(\"/offers/in_progress/reviewed\");\n\n    andThen(function () {\n      var assertions = function assertions() {\n        equal(currentURL(), \"/offers/in_progress/reviewed\");\n        equal(find(\"ul.list li\").length, 1);\n        equal(find(\"ul.list img\").length, 1);\n\n        // reviewed status\n        equal($('.time_indicator').text().indexOf('Reviewed') > 0, true);\n        equal($('.time_indicator').text().indexOf('User to plan transport.') > 0, true);\n\n        // items accept-reject status\n        var itemStatus = $('li.inbox_page:first span.info div:last').text().replace(/\\s{1,}/g, ' ');\n        equal(itemStatus, \" 1 Accepted, 1 rejected, 0 pending \");\n      };\n\n      runloopFix(assertions);\n    });\n  });\n});","define('goodcity/tests/acceptance/review-in-progress-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/review-in-progress-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/review-in-progress-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/review-item-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app'], function (exports, _ember, _goodcityTestsHelpersStartApp) {\n\n  var App;\n\n  module('Display review Item', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n    },\n    afterEach: function afterEach() {\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"Display Item under review\", function () {\n    expect(6);\n    visit(\"/offers/1/review_item/4\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/1/review_item/4/accept\");\n      equal(/Review Item:/i.test($('body').text()), true);\n      equal(/Velit fugit amet quos ut minima quis/i.test($('body').text()), true);\n      equal(/Condition: New/i.test($('body').text()), true);\n      equal($('input[disabled]').val(), \"\");\n      equal(find(\"img.thumb\").length, 1);\n    });\n  });\n\n  test(\"Back button redirects to review offer page\", function () {\n    expect(1);\n    visit(\"/offers/1/review_item/4\");\n    click(\"a:contains('Back')\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/1/review_offer/items\");\n    });\n  });\n});","define('goodcity/tests/acceptance/review-item-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/review-item-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/review-item-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/reviewer-item-messages-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer, item, message1, message2, message3;\n\n  module('Reviewer: Display Item Messages', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item = _emberDataFactoryGuy['default'].make(\"item\", { state: \"submitted\", offer: offer });\n      message1 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item, createdAt: new Date(\"2015/1/1\") });\n      message2 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item, body: \"Message from Donor\", createdAt: new Date(\"2015/1/2\") });\n      message3 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item, body: \"Message from Supervisor\", isPrivate: true });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"item-messages from donor\", function () {\n    visit('/offers/' + offer.id + \"/review_item/\" + item.id + \"/donor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item.id + \"/donor_messages\");\n      equal($('.message_details').length, 2);\n\n      var offer_message_thread_text = $('.message_details:last').parent().text();\n      equal(offer_message_thread_text.indexOf(message2.get('body')) >= 0, true);\n    });\n  });\n\n  test(\"item-messages from Supervisor\", function () {\n    visit('/offers/' + offer.id + \"/review_item/\" + item.id + \"/supervisor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item.id + \"/supervisor_messages\");\n      equal($('.message_details').length, 1);\n\n      var offer_message_thread_text = $('.message_details:last').parent().text();\n      equal(offer_message_thread_text.indexOf(message3.get('body')) >= 0, true);\n    });\n  });\n\n  test(\"item-messages from donor should add unread bubble in donor message tab\", function () {\n    visit('/offers/' + offer.id + \"/review_item/\" + item.id + \"/supervisor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item.id + \"/supervisor_messages\");\n\n      _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item, body: \"Second Message from Donor\" });\n\n      // if message received from donor, add unread bubble mark\n      equal($(\"a[href='/offers/\" + offer.id + \"/review_item/\" + item.id + \"/donor_messages'] i.unread\").length, 1);\n    });\n  });\n\n  test(\"offer-messages from staff should add unread bubble in supervisor message tab\", function () {\n    visit('/offers/' + offer.id + \"/review_item/\" + item.id + \"/donor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item.id + \"/donor_messages\");\n\n      _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: item, body: \"Second Message from Supervisor\", isPrivate: true });\n\n      // if message received from donor, add unread bubble mark\n      equal($(\"a[href='/offers/\" + offer.id + \"/review_item/\" + item.id + \"/supervisor_messages'] i.unread\").length, 1);\n    });\n  });\n});","define('goodcity/tests/acceptance/reviewer-item-messages-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/reviewer-item-messages-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/reviewer-item-messages-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/reviewer-item-status-message-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer1, offer2, item2, item1, item3, item4, offer3, item5;\n\n  module('Reviewer: Display Item Status', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"submitted\" });\n      item1 = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer1, state: \"submitted\" });\n\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item2 = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer2, state: \"submitted\" });\n      item3 = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer2, state: \"accepted\" });\n      item4 = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer2, state: \"rejected\" });\n\n      offer3 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"cancelled\" });\n      item5 = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer3, state: \"accepted\" });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"Display item status for submitted item\", function () {\n    visit('/offers/' + offer1.id + \"/review_item/\" + item1.id + \"/accept\");\n\n    andThen(function () {\n      equal(currentURL(), '/offers/' + offer1.id + \"/review_item/\" + item1.id + \"/accept\");\n      equal($.trim(find('.status-message').text()), \"This item is awaiting review.\");\n    });\n  });\n\n  test(\"Display item status for under review item\", function () {\n    visit('/offers/' + offer2.id + \"/review_item/\" + item2.id + \"/accept\");\n\n    andThen(function () {\n      equal(currentURL(), '/offers/' + offer2.id + \"/review_item/\" + item2.id + \"/accept\");\n      equal($.trim(find('.status-message').text()), \"This item is being reviewed.\");\n    });\n  });\n\n  test(\"Display item status for accepted item\", function () {\n    visit('/offers/' + offer2.id + \"/review_item/\" + item3.id + \"/accept\");\n\n    andThen(function () {\n      equal(currentURL(), '/offers/' + offer2.id + \"/review_item/\" + item3.id + \"/accept\");\n      equal($.trim(find('.status-message').text()), \"This item has been accepted.\");\n    });\n  });\n\n  test(\"Display offer status for reviewed offer\", function () {\n    visit('/offers/' + offer2.id + \"/review_item/\" + item4.id + \"/reject\");\n\n    andThen(function () {\n      equal(currentURL(), '/offers/' + offer2.id + \"/review_item/\" + item4.id + \"/reject\");\n      equal($.trim(find('.status-message').text()), \"This item has been rejected.\");\n    });\n  });\n\n  test(\"Display offer status for reviewed offer\", function () {\n    visit('/offers/' + offer3.id + \"/review_item/\" + item5.id + \"/accept\");\n\n    andThen(function () {\n      equal(currentURL(), '/offers/' + offer3.id + \"/review_item/\" + item5.id + \"/accept\");\n\n      var donor_name = offer3.get(\"createdBy.firstName\") + \" \" + offer3.get(\"createdBy.lastName\");\n\n      equal($('.status-message').text().trim().indexOf(\"The offer this item belongs to has been cancelled by \" + donor_name + \" on\") >= 0, true);\n    });\n  });\n});","define('goodcity/tests/acceptance/reviewer-item-status-message-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/reviewer-item-status-message-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/reviewer-item-status-message-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/reviewer-offer-messages-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper', 'goodcity/tests/helpers/test-skip'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper, _goodcityTestsHelpersTestSkip) {\n\n  var App, offer, message1, message2, message3, message4, message5, user1, user2, offer1;\n\n  module('Reviewer: Display Offer Messages', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      user1 = _emberDataFactoryGuy['default'].make(\"user\");\n      user2 = _emberDataFactoryGuy['default'].make(\"user_with_image\");\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer\", { createdBy: user1, state: \"under_review\" });\n      message4 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer1, sender: user2, item: null, body: \"Message from donor1\", createdAt: new Date(\"2015/1/1\") });\n      message5 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer1, sender: user1, item: null, body: \"Message from donor2\", createdAt: new Date(\"2015/1/2\") });\n      message1 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: null, createdAt: new Date(\"2015/1/3\") });\n      message2 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: null, body: \"Message from Donor\", createdAt: new Date(\"2015/1/4\") });\n      message3 = _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: null, body: \"Message from Supervisor\", isPrivate: true });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"offer-messages from donor\", function () {\n    visit('/offers/' + offer.id + \"/donor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/donor_messages\");\n      equal($('.message_details').length, 2);\n\n      var offer_message_thread_text = $('.message_details:last').parent().text();\n      equal(offer_message_thread_text.indexOf(message2.get('body')) >= 0, true);\n    });\n  });\n\n  test(\"offer-messages from Supervisor\", function () {\n    visit('/offers/' + offer.id + \"/supervisor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/supervisor_messages\");\n      equal($('.message_details').length, 1);\n\n      var offer_message_thread_text = $('.message_details:last').parent().text();\n      equal(offer_message_thread_text.indexOf(message3.get('body')) >= 0, true);\n    });\n  });\n\n  test(\"offer-messages from donor should add unread bubble in donor message tab\", function () {\n    visit('/offers/' + offer.id + \"/supervisor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/supervisor_messages\");\n\n      _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: null, body: \"Second Message from Donor\" });\n\n      // if message received from donor, add unread bubble mark\n      equal($(\"a[href='/offers/\" + offer.id + \"/donor_messages'] i.unread\").length, 1);\n    });\n  });\n\n  test(\"offer-messages from staff should add unread bubble in supervisor message tab\", function () {\n    visit('/offers/' + offer.id + \"/donor_messages\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/donor_messages\");\n\n      _emberDataFactoryGuy['default'].make(\"message\", { offer: offer, item: null, body: \"Second Message from Supervisor\", isPrivate: true });\n\n      // if message received from donor, add unread bubble mark\n      equal($(\"a[href='/offers/\" + offer.id + \"/supervisor_messages'] i.unread\").length, 1);\n    });\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"offer-message with image\", function () {\n    visit('/offers/' + offer1.id + \"/donor_messages\");\n    andThen(function () {\n      var src = $(\".received_message#\" + message4.id + \" img\").attr(\"src\");\n      equal(src.indexOf(\"cloudinary\") > 0, true);\n    });\n  });\n});","define('goodcity/tests/acceptance/reviewer-offer-messages-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/reviewer-offer-messages-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/reviewer-offer-messages-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/reviewer-offer-status-messages-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer1, offer2, reviewer, reviewerName, offer7, offer3, offer4, delivery1, delivery2, offer5, delivery3, offer6, offer8, item8, offer9, item9, offer10, schedule, ggv_order11, delivery11, offer11, offer12;\n\n  module('Reviewer: Display Offer Status', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      reviewer = _emberDataFactoryGuy['default'].make(\"user\");\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"submitted\" });\n\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"under_review\", reviewedBy: reviewer });\n      reviewerName = reviewer.get(\"firstName\") + \" \" + reviewer.get(\"lastName\");\n\n      offer3 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"reviewed\" });\n\n      schedule = _emberDataFactoryGuy['default'].make('schedule', { scheduledAt: '12/01/2014' });\n      delivery1 = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Alternate\", schedule: schedule });\n      offer4 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery1 });\n\n      delivery2 = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Gogovan\", schedule: schedule });\n      offer5 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery2 });\n\n      delivery3 = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Drop Off\", schedule: schedule });\n      offer6 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery3 });\n\n      offer7 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"closed\", reviewedBy: reviewer });\n\n      offer8 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item8 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer8 });\n\n      offer9 = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item9 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer9 });\n\n      offer10 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"received\" });\n\n      ggv_order11 = _emberDataFactoryGuy['default'].make(\"gogovan_active_order\");\n      delivery11 = _emberDataFactoryGuy['default'].make(\"delivery\", { deliveryType: \"Gogovan\", gogovanOrder: ggv_order11 });\n      offer11 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery11 });\n      offer12 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"cancelled\" });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"Display offer status for submitted offer\", function () {\n    visit('/offers/' + offer1.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer1.id + \"/review_offer/items\");\n      equal($.trim(find('.status-message').text()), \"Start Review\");\n    });\n  });\n\n  // display initial char with message\n  test(\"Display offer status for offer under review\", function () {\n    visit('/offers/' + offer2.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer2.id + \"/review_offer/items\");\n\n      // message detail\n      var status = $.trim(find('.status-message').text());\n      equal(status.indexOf(\"Started by \" + reviewerName) >= 0, true);\n      equal(status.indexOf(reviewer.get('nameInitial')) >= 0, true);\n    });\n  });\n\n  test(\"Display offer status for reviewed offer\", function () {\n    visit('/offers/' + offer3.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer3.id + \"/review_offer/items\");\n\n      // var message = $.trim(find('.status-message').text().replace(/\\n/g, ''));\n      // equal(message, \"Reviewed less than a minute ago. User to plan transport.\" );\n    });\n  });\n\n  test(\"Display offer status for scheduled offer: Collection\", function () {\n    visit('/offers/' + offer4.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer4.id + \"/review_offer/items\");\n      equal($.trim(find('.status-message').text().replace(/\\s{2,}/g, ' ')), \"Collection Mon 1st Dec Afternoon\");\n    });\n  });\n\n  test(\"Display offer status for scheduled offer: Gogovan pending\", function () {\n    visit('/offers/' + offer5.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer5.id + \"/review_offer/items\");\n      equal($.trim(find('.status-message').text().replace(/\\s{2,}/g, ' ')), \"Van ordered Afternoon, 2pm-4pm Mon 1st Dec\");\n    });\n  });\n\n  test(\"Display offer status for scheduled offer: Gogovan active\", function () {\n    visit('/offers/' + offer11.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer11.id + \"/review_offer/items\");\n      var status = $.trim(find('.status-message').text().replace(/\\s{2,}/g, ' '));\n      equal(status.indexOf(\"Van confirmed Afternoon, 2pm-4pm\") >= 0, true);\n    });\n  });\n\n  test(\"Display offer status for scheduled offer: Drop Off\", function () {\n    visit('/offers/' + offer6.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer6.id + \"/review_offer/items\");\n      equal($.trim(find('.status-message').text().replace(/\\s{2,}/g, ' ')), \"Drop-off Mon 1st Dec Afternoon\");\n    });\n  });\n\n  test(\"Display offer status for closed offer\", function () {\n    visit('/offers/' + offer7.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer7.id + \"/review_offer/items\");\n      // equal($.trim(find('.status-message').text()), \"Offer closed by \" + reviewerName + \" less than a minute ago\");\n    });\n  });\n\n  test(\"Display offer status for all rejected items\", function () {\n    visit('/offers/' + offer8.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer8.id + \"/review_offer/items\");\n      equal($.trim(find('.status-message').text()).indexOf(\"No items needed\") >= 0, true);\n    });\n  });\n\n  test(\"Display offer status for all reviewed items\", function () {\n    visit('/offers/' + offer9.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer9.id + \"/review_offer/items\");\n      equal(find('.status-message').text().replace(/ /g, ' ').indexOf(\"All items reviewed\") >= 0, true);\n    });\n  });\n\n  test(\"Display offer status for received offer-items\", function () {\n    visit('/offers/' + offer10.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer10.id + \"/review_offer/items\");\n      var donor_name = offer10.get(\"createdBy.firstName\") + \" \" + offer10.get(\"createdBy.lastName\");\n      equal($('.status-message').text().trim().indexOf(\"Goods donated by \" + donor_name + \" received\") >= 0, true);\n    });\n  });\n\n  test(\"Display offer status for cancelled offer\", function () {\n    visit('/offers/' + offer12.id + \"/review_offer/items\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer12.id + \"/review_offer/items\");\n      var donor_name = offer12.get(\"closedBy.firstName\") + \" \" + offer12.get(\"closedBy.lastName\");\n      equal($('.status-message').text().trim().indexOf(\"Cancelled by \" + donor_name) >= 0, true);\n    });\n  });\n});","define('goodcity/tests/acceptance/reviewer-offer-status-messages-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/reviewer-offer-status-messages-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/reviewer-offer-status-messages-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/reviewer-offer-tab-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer, item1, item2, item3, message1, message2, donor, msg_time;\n\n  module('Reviewer: Display Offer Tab', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      msg_time = new Date().setHours(0, 0, 0);\n      message1 = _emberDataFactoryGuy['default'].make(\"message\", { sender: donor, offer: offer, item: null, createdAt: msg_time });\n      item1 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"accepted\", offer: offer });\n      item2 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"rejected\", offer: offer });\n      item3 = _emberDataFactoryGuy['default'].make(\"item\", { state: \"submitted\", offer: offer });\n      message2 = _emberDataFactoryGuy['default'].make(\"message\", { sender: donor, offer: offer, item: item3 });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"item status badge on item-image\", function () {\n    visit('/offers/' + offer.id + \"/review_offer/items\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_offer/items\");\n\n      // display 'Accepted' status for accepted-item\n      equal($(\".item-image .accept_badge\").not(\".hidden\").length, 1);\n\n      // display 'Rejected' status for accepted-item\n      equal($(\".item-image .reject_badge\").not(\".hidden\").length, 1);\n    });\n  });\n\n  test(\"offer-messages thread details\", function () {\n    visit('/offers/' + offer.id + \"/review_offer/items\");\n    andThen(function () {\n      // display 'General Messages' thread\n      equal($('div:contains(\"General Messages\"):last').length, 1);\n\n      var offer_message_thread_text = $('div:contains(\"General Messages\"):last').closest('span.info').text();\n\n      // display latest offer message in 'General Messages' thread\n      equal(offer_message_thread_text.indexOf(message1.get('body')) > 0, true);\n\n      // display unread offer message count in 'General Messages' thread\n      equal(offer_message_thread_text.indexOf('1') > 0, true);\n    });\n  });\n\n  test(\"ordering of message threads\", function () {\n    visit('/offers/' + offer.id + \"/review_offer/items\");\n    andThen(function () {\n      // latest item message thread\n      var latest_message_thread = $('.list li:eq(0)').text();\n      equal(latest_message_thread.indexOf(item3.get('donorDescription')) > 0, true);\n\n      // second offer message thread\n      var offer_message_thread = $('.list li:eq(1)').text();\n      equal(offer_message_thread.indexOf(\"General Messages\") > 0, true);\n    });\n  });\n\n  test(\"visit pending review item\", function () {\n    visit('/offers/' + offer.id + \"/review_offer/items\");\n    andThen(function () {\n      click(\".list li a:contains('\" + item3.get('donorDescription') + \"')\");\n      andThen(function () {\n        equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item3.id + \"/accept\");\n      });\n    });\n  });\n\n  test(\"visit accepted item\", function () {\n    visit('/offers/' + offer.id + \"/review_offer/items\");\n    andThen(function () {\n      click(\".list li a:contains('\" + item1.get('donorDescription') + \"')\");\n      andThen(function () {\n        equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/accept\");\n      });\n    });\n  });\n\n  test(\"visit rejected item\", function () {\n    visit('/offers/' + offer.id + \"/review_offer/items\");\n    andThen(function () {\n      click(\".list li a:contains('\" + item2.get('donorDescription') + \"')\");\n      andThen(function () {\n        equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item2.id + \"/reject\");\n      });\n    });\n  });\n\n  test(\"visit offer message threads\", function () {\n    visit('/offers/' + offer.id + \"/review_offer/items\");\n    andThen(function () {\n      //offer message thread\n      click(\".list li a:contains('General Messages')\");\n      andThen(function () {\n        equal(currentURL(), \"/offers/\" + offer.id + \"/donor_messages\");\n      });\n    });\n  });\n});","define('goodcity/tests/acceptance/reviewer-offer-tab-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/reviewer-offer-tab-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/reviewer-offer-tab-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/reviewer-reject-item-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper', 'goodcity/tests/helpers/test-skip'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper, _goodcityTestsHelpersTestSkip) {\n\n  var App, offer, item1, item2;\n\n  module('Reviewer: Rejct Item Tab', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      offer = _emberDataFactoryGuy['default'].make(\"offer\", { state: \"under_review\" });\n      item1 = _emberDataFactoryGuy['default'].make(\"item_with_type\", { offer: offer });\n      item2 = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer });\n    },\n\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"visit rejected item without item_type\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item2.id + \"/reject\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item2.id + \"/reject\");\n      equal($('input[disabled]').val(), \"\");\n      equal($('p.no-items').text(), \"Please choose Item Type first!\");\n    });\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"visit rejected item with item_type\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/reject\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/reject\");\n      equal($('input[disabled]').val(), item1.get('packageType.name'));\n      equal($(\".reject-offer ul li\").length, 4);\n\n      //placeholder message in recjectio comments textarea\n      equal($('textarea').attr('placeholder'), \"Message to donor about the rejection of this item\");\n    });\n  });\n\n  test(\"validate at least one option selected\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/reject\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/reject\");\n      click('.rejectOffer');\n      andThen(function () {\n        equal($.trim($(\".error-box\").text()), \"Please choose a reason.\");\n      });\n    });\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"display message for quality option\", function () {\n    visit(\"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/reject\");\n    andThen(function () {\n      equal(currentURL(), \"/offers/\" + offer.id + \"/review_item/\" + item1.id + \"/reject\");\n      click($('input[type=radio]:eq(0)'));\n      andThen(function () {\n        // set textarea conent on click of radio option\n        equal($('textarea').val(), \"Unfortunately we cannot receive this item. Some categories of items are very difficult for us to distribute unless they are in excellent condition.\");\n\n        // clear message conent on click of x-icon\n        click($('.remove-text'));\n        andThen(function () {\n          equal($('textarea').val(), \"\");\n        });\n      });\n    });\n  });\n});","define('goodcity/tests/acceptance/reviewer-reject-item-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/reviewer-reject-item-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/reviewer-reject-item-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/scheduled-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper', 'goodcity/tests/helpers/test-skip'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper, _goodcityTestsHelpersTestSkip) {\n\n  var App, offer1, delivery1, offer2, delivery2, offer3, delivery3, schedule4, offer4, delivery4, ggv_order;\n\n  module('Scheduled Offers', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n\n      delivery1 = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Gogovan\" });\n      offer1 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery1 });\n\n      ggv_order = _emberDataFactoryGuy['default'].make(\"gogovan_order\", { status: \"pending\" });\n      schedule4 = _emberDataFactoryGuy['default'].make('schedule', {\n        scheduledAt: new Date(new Date().setDate(new Date().getDate() + 30)) });\n      delivery4 = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Gogovan\", schedule: schedule4, gogovanOrder: ggv_order });\n      offer4 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery4 });\n\n      delivery2 = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Alternate\" });\n      offer2 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery2 });\n\n      delivery3 = _emberDataFactoryGuy['default'].make('delivery', { deliveryType: \"Drop Off\" });\n      offer3 = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", delivery: delivery3 });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"viewing collection schedule\", function () {\n    visit(\"/offers/scheduled\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/scheduled/collection\");\n      equal(find(\"ul.list li\").length, 1);\n      equal(find(\"ul.list img\").length, 1);\n      equal($('.time_indicator').text().indexOf('Collection') > 0, true);\n      equal($.trim(find('.dynamic_filter select option').first().text()), \"All offers (1)\");\n    });\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"viewing gogovan delivery schedule\", function () {\n    visit(\"/offers/scheduled/gogovan\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/scheduled/gogovan\");\n      equal(find(\"ul.list li\").length, 2);\n      equal(find(\"ul.list img\").length, 2);\n      equal($('.time_indicator').text().indexOf('Van ordered') > 0, true);\n    });\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"filtering gogovan delivery schedule\", function () {\n    visit(\"/offers/scheduled/gogovan\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/scheduled/gogovan\");\n\n      var option = find('.dynamic_filter select option:contains(\"After next week (1)\")').val();\n      $('.dynamic_filter select').val(option).change();\n\n      andThen(function () {\n        equal($.trim(find('.dynamic_filter select :selected').text()), \"After next week (1)\");\n        equal(find(\"ul.list li\").length, 1);\n        equal(find(\"ul.list img\").length, 1);\n        equal($('.time_indicator').text().indexOf('Van ordered') > 0, true);\n      });\n    });\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])(\"viewing other delivery schedule\", function () {\n    visit(\"/offers/scheduled/other_delivery\");\n\n    andThen(function () {\n      equal(currentURL(), \"/offers/scheduled/other_delivery\");\n      equal(find(\"ul.list li\").length, 1);\n      equal(find(\"ul.list img\").length, 1);\n      equal($('.time_indicator').text().indexOf('Drop-off') > 0, true);\n    });\n  });\n});","define('goodcity/tests/acceptance/scheduled-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/scheduled-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/scheduled-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/search-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App, offer, user, ggvOrder, delivery, address, contact, item;\n\n  module('Search Offers', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])({}, 2);\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      _ember['default'].run.debounce = function (context, func) {\n        return func.call(context);\n      };\n\n      user = _emberDataFactoryGuy['default'].make(\"user\", { firstName: \"John\", mobile: \"99999999\" });\n      offer = _emberDataFactoryGuy['default'].make(\"offer_with_items\", { state: \"scheduled\", createdBy: user });\n      item = _emberDataFactoryGuy['default'].make(\"item\", { offer: offer, state: \"accepted\" });\n\n      ggvOrder = _emberDataFactoryGuy['default'].make(\"gogovan_active_order\");\n      contact = _emberDataFactoryGuy['default'].make(\"contact\");\n      delivery = _emberDataFactoryGuy['default'].make(\"delivery\", { gogovanOrder: ggvOrder, offer: offer, contact: contact });\n      address = _emberDataFactoryGuy['default'].make(\"address\", { 'addressable': contact });\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"search offers by donor name\", function () {\n    visit(\"/search\");\n\n    andThen(function () {\n      equal(currentURL(), \"/search\");\n      fillIn('#searchText', user.get(\"firstName\"));\n\n      andThen(function () {\n        equal(find('ul li').length, 1);\n      });\n    });\n  });\n\n  test(\"search offers by item description\", function () {\n    visit(\"/search\");\n\n    andThen(function () {\n      equal(currentURL(), \"/search\");\n      fillIn('#searchText', item.get(\"donorDescription\"));\n\n      andThen(function () {\n        equal(find('ul li').length, 1);\n      });\n    });\n  });\n\n  test(\"search offers by donor mobile\", function () {\n    visit(\"/search\");\n\n    andThen(function () {\n      equal(currentURL(), \"/search\");\n      fillIn('#searchText', user.get(\"mobile\"));\n\n      andThen(function () {\n        equal(find('ul li').length, 1);\n      });\n    });\n  });\n\n  test(\"search offers by vehicle number\", function () {\n    visit(\"/search\");\n\n    andThen(function () {\n      equal(currentURL(), \"/search\");\n      fillIn('#searchText', ggvOrder.get(\"driverLicense\"));\n\n      andThen(function () {\n        equal(find('ul li').length, 1);\n        equal(find('ul li img').length, 1);\n      });\n    });\n  });\n\n  test(\"search offers by delivery address\", function () {\n\n    visit(\"/search\");\n\n    andThen(function () {\n      equal(currentURL(), \"/search\");\n      _ember['default'].run(function () {\n        fillIn('#searchText', address.get(\"flat\"));\n      });\n\n      andThen(function () {\n        equal(find('ul li').length, 1);\n        equal(find('ul li img').length, 1);\n      });\n    });\n  });\n});","define('goodcity/tests/acceptance/search-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/search-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/search-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/acceptance/subscriptions-test', ['exports', 'ember', 'goodcity/tests/helpers/start-app', 'goodcity/tests/helpers/empty-sync-data-stub', 'ember-data-factory-guy', 'ember-data-factory-guy/factory-guy-test-helper'], function (exports, _ember, _goodcityTestsHelpersStartApp, _goodcityTestsHelpersEmptySyncDataStub, _emberDataFactoryGuy, _emberDataFactoryGuyFactoryGuyTestHelper) {\n\n  var App;\n\n  module('Subscriptions', {\n    beforeEach: function beforeEach() {\n      App = (0, _goodcityTestsHelpersStartApp['default'])();\n      _emberDataFactoryGuyFactoryGuyTestHelper['default'].setup();\n      (0, _goodcityTestsHelpersEmptySyncDataStub['default'])(_emberDataFactoryGuyFactoryGuyTestHelper['default']);\n    },\n    afterEach: function afterEach() {\n      Em.run(function () {\n        _emberDataFactoryGuyFactoryGuyTestHelper['default'].teardown();\n      });\n      _ember['default'].run(App, 'destroy');\n    }\n  });\n\n  test(\"updateStore doesn't process before response to model.save request\", function () {\n    expect(2);\n\n    var store = _emberDataFactoryGuy['default'].store;\n    var subscriptions = lookup('controller:subscriptions');\n    var user = _emberDataFactoryGuy['default'].make('user');\n    _emberDataFactoryGuy['default'].make('user_profile', { id: user.id });\n    var offer = { id: 2 };\n\n    $.mockjaxSettings.logging = true;\n    $.mockjax({ url: \"/api/v1/offer*\", status: 201, response: function response() {\n        _ember['default'].run(function () {\n          subscriptions.update_store({\n            item: { \"offer\": offer },\n            sender: { \"user\": user.toJSON({ includeId: true }) },\n            operation: \"create\"\n          }, function () {});\n        });\n        this.responseText = { \"offer\": offer };\n      } });\n\n    _ember['default'].run(function () {\n      store.createRecord(\"offer\", { createdBy: user }).save().then(function () {\n        equal(store.peekAll(\"offer\").get(\"length\"), 1);\n        equal(store.peekAll(\"offer\").get(\"firstObject.id\"), offer.id);\n      });\n    });\n\n    // causes test to wait for next ember run loop before completing\n    andThen(function () {});\n  });\n});","define('goodcity/tests/acceptance/subscriptions-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/subscriptions-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/subscriptions-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/add-holiday.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/add-holiday.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/add-holiday.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/auto-resize-textarea.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/auto-resize-textarea.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/auto-resize-textarea.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/cancel-offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/cancel-offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/cancel-offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/complete-receive-offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/complete-receive-offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/complete-receive-offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/complete-review-offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/complete-review-offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/complete-review-offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/custom-select2.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/custom-select2.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/custom-select2.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/focus-textfield.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/focus-textfield.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/focus-textfield.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/holiday-calender.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/holiday-calender.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/holiday-calender.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/holiday-detail.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/holiday-detail.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/holiday-detail.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/inactive-offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/inactive-offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/inactive-offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/inventory-number-input.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/inventory-number-input.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/inventory-number-input.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/offer-status-message.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/offer-status-message.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/offer-status-message.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/package-image.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/package-image.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/package-image.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/radio-text-input.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/radio-text-input.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/radio-text-input.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/receive-item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/receive-item.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/receive-item.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/receive-menu.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/receive-menu.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/receive-menu.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/reject-message-field.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/reject-message-field.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/reject-message-field.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/schedule-selection.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/schedule-selection.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/schedule-selection.js should pass jshint.');\n  });\n});","define('goodcity/tests/components/twilio-make-call.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/twilio-make-call.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/twilio-make-call.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/finished.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/finished.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/finished.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/finished/cancelled.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/finished');\n  QUnit.test('controllers/finished/cancelled.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/finished/cancelled.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/finished/inactive.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/finished');\n  QUnit.test('controllers/finished/inactive.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/finished/inactive.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/finished/received.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/finished');\n  QUnit.test('controllers/finished/received.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/finished/received.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/holidays.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/holidays.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/holidays.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/in_progress.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/in_progress.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/in_progress.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/in_progress/reviewed.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/in_progress');\n  QUnit.test('controllers/in_progress/reviewed.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/in_progress/reviewed.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/in_progress/reviewing.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/in_progress');\n  QUnit.test('controllers/in_progress/reviewing.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/in_progress/reviewing.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/internet_call_status.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/internet_call_status.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/internet_call_status.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/item_types.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/item_types.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/item_types.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/my_list.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/my_list.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/my_list.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/my_list/finished.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/my_list');\n  QUnit.test('controllers/my_list/finished.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/my_list/finished.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/my_list/reviewed.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/my_list');\n  QUnit.test('controllers/my_list/reviewed.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/my_list/reviewed.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/my_list/reviewing.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/my_list');\n  QUnit.test('controllers/my_list/reviewing.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/my_list/reviewing.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/my_list/scheduled.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/my_list');\n  QUnit.test('controllers/my_list/scheduled.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/my_list/scheduled.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/my_notifications.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/my_notifications.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/my_notifications.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/notification_link.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/notification_link.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/notification_link.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offer/cancel_gogovan.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/offer');\n  QUnit.test('controllers/offer/cancel_gogovan.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offer/cancel_gogovan.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offer/donor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/offer');\n  QUnit.test('controllers/offer/donor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offer/donor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offer/merge.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/offer');\n  QUnit.test('controllers/offer/merge.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offer/merge.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offer/supervisor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/offer');\n  QUnit.test('controllers/offer/supervisor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offer/supervisor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offer/transport_details.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/offer');\n  QUnit.test('controllers/offer/transport_details.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offer/transport_details.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offers.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/offers.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offers.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offers/receiving.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/offers');\n  QUnit.test('controllers/offers/receiving.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offers/receiving.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/offers/submitted.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/offers');\n  QUnit.test('controllers/offers/submitted.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/offers/submitted.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/receive_package.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/receive_package.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/receive_package.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/review_item.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_item.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_item/accept.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_item');\n  QUnit.test('controllers/review_item/accept.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_item/accept.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_item/donor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_item');\n  QUnit.test('controllers/review_item/donor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_item/donor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_item/reject.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_item');\n  QUnit.test('controllers/review_item/reject.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_item/reject.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_item/supervisor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_item');\n  QUnit.test('controllers/review_item/supervisor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_item/supervisor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/review_offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_offer/donor_details.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_offer');\n  QUnit.test('controllers/review_offer/donor_details.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_offer/donor_details.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_offer/items.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_offer');\n  QUnit.test('controllers/review_offer/items.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_offer/items.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_offer/logistics.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_offer');\n  QUnit.test('controllers/review_offer/logistics.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_offer/logistics.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/review_offer/receive.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/review_offer');\n  QUnit.test('controllers/review_offer/receive.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/review_offer/receive.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/scheduled.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/scheduled.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/scheduled.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/scheduled/collection.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/scheduled');\n  QUnit.test('controllers/scheduled/collection.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/scheduled/collection.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/scheduled/gogovan.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/scheduled');\n  QUnit.test('controllers/scheduled/gogovan.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/scheduled/gogovan.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/scheduled/other_delivery.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/scheduled');\n  QUnit.test('controllers/scheduled/other_delivery.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/scheduled/other_delivery.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/search.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/search.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/search.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/search_label.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/search_label.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/search_label.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/user.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/user.js should pass jshint.');\n  });\n});","define('goodcity/tests/controllers/users.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/users.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/users.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/address', ['exports', 'ember-data-factory-guy'], function (exports, _emberDataFactoryGuy) {\n\n  _emberDataFactoryGuy['default'].define('address', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      }\n    },\n\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      flat: \"901-B\",\n      building: \"Plaza\",\n      street: \"Palace Street\",\n      addressType: \"colletion\",\n\n      addressableType: \"Contact\",\n      addressable: _emberDataFactoryGuy['default'].belongsTo(\"contact\")\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/address.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/address.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/address.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/cancellation_reason\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var reason_list = [\"donated else\", \"bulky\"];\n\n  _emberDataFactoryGuy[\"default\"].define('cancellation_reason', {\n    sequences: {\n      name: function name() {\n        return reason_list[Math.floor(Math.random() * reason_list.length)];\n      }\n    },\n    \"default\": {\n      name: _emberDataFactoryGuy[\"default\"].generate(\"name\")\n    }\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/cancellation_reason.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/cancellation_reason.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/cancellation_reason.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/contact', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/mobile'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesMobile) {\n\n  _emberDataFactoryGuy['default'].define('contact', {\n    sequences: {\n      name: function name(num) {\n        return 'Daniel' + num;\n      }\n    },\n    'default': {\n      name: _emberDataFactoryGuy['default'].generate('name'),\n      mobile: _emberDataFactoryGuy['default'].generate(_goodcityTestsFactoriesMobile['default'].nonHongKong)\n    }\n  });\n  exports['default'] = {};\n});","define('goodcity/tests/factories/contact.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/contact.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/contact.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/crossroads_transport\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var types = [\"1/8 Truck\", \"2/8 Truck\", \"8/8 Truck\"];\n\n  _emberDataFactoryGuy[\"default\"].define('crossroads_transport', {\n    \"default\": {\n      name: _emberDataFactoryGuy[\"default\"].generate(function () {\n        return types[Math.floor(Math.random() * types.length)];\n      }),\n      cost: 200\n    }\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/crossroads_transport.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/crossroads_transport.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/crossroads_transport.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/delivery\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var conditions = [\"Gogovan\", \"Drop Off\", \"Alternate\"];\n\n  _emberDataFactoryGuy[\"default\"].define('delivery', {\n    \"default\": {\n      deliveryType: _emberDataFactoryGuy[\"default\"].generate(function (num) {\n        return conditions[num];\n      }),\n      contact: _emberDataFactoryGuy[\"default\"].belongsTo(\"contact\"),\n      schedule: _emberDataFactoryGuy[\"default\"].belongsTo(\"schedule\")\n    }\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/delivery.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/delivery.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/delivery.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/district\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var district_list = [\"Yuen Long\", \"Kwu Tung\", \"Tai Wai\", \"Taipo\", \"Tai Tong\", \"Tai Tam\"];\n\n  _emberDataFactoryGuy[\"default\"].define('district', {\n    sequences: {\n      district_name: function district_name(num) {\n        return district_list[num - 1];\n      }\n    },\n\n    \"default\": { name: _emberDataFactoryGuy[\"default\"].generate(\"district_name\"),\n      territory_id: 1\n    },\n    district_belongs_territory: {\n      territory: _emberDataFactoryGuy[\"default\"].belongsTo('territory')\n    }\n  });\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/district.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/district.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/district.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/donor_condition\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var conditions = [\"New\", \"Lightly Used\", \"Heavily Used\", \"Broken\"];\n\n  _emberDataFactoryGuy[\"default\"].define('donor_condition', {\n    \"default\": {\n      name: _emberDataFactoryGuy[\"default\"].generate(function (num) {\n        return conditions[num] + num;\n      })\n    }\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/donor_condition.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/donor_condition.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/donor_condition.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/gogovan_order', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/mobile'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesMobile) {\n\n  _emberDataFactoryGuy['default'].define('gogovan_order', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      },\n      collectionName: function collectionName(num) {\n        return 'Daniel' + num + ' Stepp' + num;\n      },\n      driverName: function driverName(num) {\n        return 'Driver' + num + ' Ggv' + num;\n      }\n    },\n\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      name: _emberDataFactoryGuy['default'].generate('collectionName'),\n      mobile: _emberDataFactoryGuy['default'].generate(_goodcityTestsFactoriesMobile['default'].hongKong),\n      status: 'pending',\n\n      delivery: _emberDataFactoryGuy['default'].belongsTo(\"delivery\"),\n      createdAt: new Date(2015, 0, 20, 13, 10),\n      updatedAt: new Date(2015, 0, 20, 13, 11)\n    },\n\n    gogovan_active_order: {\n      price: 120.0,\n      driverName: _emberDataFactoryGuy['default'].generate('driverName'),\n      driverMobile: _emberDataFactoryGuy['default'].generate(_goodcityTestsFactoriesMobile['default'].hongKong),\n      driverLicense: 'VH1002',\n      status: 'active'\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/gogovan_order.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/gogovan_order.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/gogovan_order.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/gogovan_transport\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var types = [\"Van\", \"5.5t Truck\", \"Disable\"];\n\n  _emberDataFactoryGuy[\"default\"].define('gogovan_transport', {\n    \"default\": {\n      name: _emberDataFactoryGuy[\"default\"].generate(function () {\n        return types[Math.floor(Math.random() * types.length)];\n      }),\n      disabled: false\n    }\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/gogovan_transport.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/gogovan_transport.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/gogovan_transport.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/holiday', ['exports', 'ember-data-factory-guy'], function (exports, _emberDataFactoryGuy) {\n\n  _emberDataFactoryGuy['default'].define('holiday', {\n    sequences: {\n      name: function name(num) {\n        return 'Holiday_' + num;\n      }\n    },\n\n    'default': {\n      name: _emberDataFactoryGuy['default'].generate('name'),\n      holiday: new Date(2016, 0, 20, 13, 11),\n      year: 2016\n    }\n\n  });\n  exports['default'] = {};\n});","define('goodcity/tests/factories/holiday.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/holiday.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/holiday.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/image', ['exports', 'ember-data-factory-guy'], function (exports, _emberDataFactoryGuy) {\n  _emberDataFactoryGuy['default'].define('image', {\n    sequences: {\n      cloudinaryId: function cloudinaryId(num) {\n        return \"1407764294/default/test_image\" + num + \".jpg\";\n      }\n    },\n    'default': {\n      cloudinaryId: _emberDataFactoryGuy['default'].generate('cloudinaryId'),\n      favourite: false\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/image.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/image.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/image.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/item', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/offer', 'goodcity/tests/factories/package_type'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesOffer, _goodcityTestsFactoriesPackage_type) {\n\n  _emberDataFactoryGuy['default'].define('item', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      },\n      description: function description(num) {\n        return 'Donor Description' + num;\n      }\n    },\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      state: 'submitted',\n      createdAt: '12/01/2014',\n      updatedAt: '12/01/2014',\n      donorDescription: _emberDataFactoryGuy['default'].generate(\"description\"),\n      donorCondition: _emberDataFactoryGuy['default'].belongsTo('donor_condition')\n    },\n    item_with_offer: {\n      offer: _emberDataFactoryGuy['default'].belongsTo('offer')\n    },\n    item_with_type: {\n      packageType: _emberDataFactoryGuy['default'].belongsTo('package_type')\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/item.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/item.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/location', ['exports', 'ember-data-factory-guy'], function (exports, _emberDataFactoryGuy) {\n\n  _emberDataFactoryGuy['default'].define('location', {\n    'default': {\n      building: _emberDataFactoryGuy['default'].generate(function (num) {\n        return \"building\" + num;\n      }),\n\n      area: _emberDataFactoryGuy['default'].generate(function (num) {\n        return \"area\" + num;\n      }),\n\n      stockitId: _emberDataFactoryGuy['default'].generate(function (num) {\n        return 100 + num;\n      })\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/location.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/location.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/location.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/message', ['exports', 'ember-data-factory-guy'], function (exports, _emberDataFactoryGuy) {\n\n  _emberDataFactoryGuy['default'].define('message', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      }\n    },\n\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      offer: _emberDataFactoryGuy['default'].belongsTo(\"offer\"),\n      item: _emberDataFactoryGuy['default'].belongsTo(\"item\"),\n      sender: _emberDataFactoryGuy['default'].belongsTo(\"user\"),\n      state: 'unread',\n      isPrivate: false,\n      body: \"Message Example Test\",\n      createdAt: new Date()\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/message.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/message.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/message.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/mobile\", [\"exports\"], function (exports) {\n  exports[\"default\"] = {\n    hongKong: function hongKong() {\n      return Math.floor(Math.random() * 8999922 + 67110000).toString();\n    },\n\n    nonHongKong: function nonHongKong() {\n      return Math.floor(Math.random() * 8999922 + 671100001).toString();\n    }\n  };\n});","define('goodcity/tests/factories/mobile.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/mobile.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/mobile.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/offer', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/item'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesItem) {\n\n  _emberDataFactoryGuy['default'].define('offer', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      }\n    },\n\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      language: 'en',\n      state: 'draft',\n      origin: 'trial',\n      stairs: true,\n      parking: true,\n      estimatedSize: '12cm',\n      notes: 'dummy text',\n      createdBy: _emberDataFactoryGuy['default'].belongsTo(\"user\"),\n      reviewedBy: _emberDataFactoryGuy['default'].belongsTo(\"user\"),\n      closedBy: _emberDataFactoryGuy['default'].belongsTo(\"user\"),\n      delivery: _emberDataFactoryGuy['default'].belongsTo(\"delivery\"),\n      createdAt: new Date(2015, 0, 20, 13, 10),\n      updatedAt: new Date(2015, 0, 20, 13, 11)\n    },\n    offer_with_items: {\n      items: _emberDataFactoryGuy['default'].hasMany('item', 2)\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/package', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/item', 'goodcity/tests/factories/package_type'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesItem, _goodcityTestsFactoriesPackage_type) {\n\n  _emberDataFactoryGuy['default'].define('package', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      }\n    },\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      quantity: 1,\n      length: 10,\n      width: 10,\n      height: 10,\n      item: _emberDataFactoryGuy['default'].belongsTo('item'),\n      packageType: _emberDataFactoryGuy['default'].belongsTo('package_type'),\n      notes: \"example\"\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/package.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/package.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/package.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/package_type', ['exports', 'ember-data-factory-guy'], function (exports, _emberDataFactoryGuy) {\n\n  _emberDataFactoryGuy['default'].define('package_type', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      },\n      name: function name(num) {\n        return 'Category' + num;\n      },\n      code: function code(num) {\n        return num;\n      }\n    },\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      name: _emberDataFactoryGuy['default'].generate(\"name\"),\n      code: \"ABC\",\n      defaultChildPackages: \"ABC\",\n      otherChildPackages: \"ABC\"\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/package_type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/package_type.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/package_type.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/permission\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var permission_list = [\"Reviewer\", \"Supervisor\"];\n\n  _emberDataFactoryGuy[\"default\"].define('permission', {\n    sequences: {\n      name: function name() {\n        return permission_list[Math.floor(Math.random() * permission_list.length)];\n      }\n    },\n    \"default\": null\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/permission.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/permission.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/permission.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/rejection_reason\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var reason_list = [\"Quality\", \"Size\", \"Supply/Demand\"];\n\n  _emberDataFactoryGuy[\"default\"].define('rejection_reason', {\n    sequences: {\n      name: function name() {\n        return reason_list[Math.floor(Math.random() * reason_list.length)];\n      }\n    },\n    \"default\": {\n      name: _emberDataFactoryGuy[\"default\"].generate(\"name\")\n    }\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/rejection_reason.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/rejection_reason.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/rejection_reason.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/schedule', ['exports', 'ember-data-factory-guy'], function (exports, _emberDataFactoryGuy) {\n\n  _emberDataFactoryGuy['default'].define('schedule', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      },\n      name: function name(num) {\n        return 'Daniel' + num;\n      },\n      slot: function slot(num) {\n        return num;\n      }\n    },\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      resource: _emberDataFactoryGuy['default'].generate('name'),\n      slot: _emberDataFactoryGuy['default'].generate('slot'),\n      slotName: 'Afternoon, 2pm-4pm',\n      zone: 'zone',\n      scheduledAt: new Date(new Date().setDate(new Date().getDate() - 1))\n    }\n  });\n  exports['default'] = {};\n});","define('goodcity/tests/factories/schedule.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/schedule.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/schedule.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/territory', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/district'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesDistrict) {\n  var territory_list = [\"\", \"New Territories\", \"Hong Kong Island\", \"Kowloon\"];\n\n  _emberDataFactoryGuy['default'].define('territory', {\n    sequences: {\n      territory_name: function territory_name() {\n        return territory_list[Math.floor(Math.random() * territory_list.length)];\n      }\n    },\n    'default': {\n      name: _emberDataFactoryGuy['default'].generate(\"territory_name\")\n    },\n    territory_with_many_districts: {\n      districts: _emberDataFactoryGuy['default'].hasMany('district', 6)\n    }\n  });\n\n  exports['default'] = {};\n});","define('goodcity/tests/factories/territory.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/territory.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/territory.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/timeslot\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var timeslots = [\"9AM-11AM\", \"11AM-1PM\", \"2PM-4PM\", \"4PM-6PM\"];\n\n  _emberDataFactoryGuy[\"default\"].define('timeslot', {\n    \"default\": {\n      name: _emberDataFactoryGuy[\"default\"].generate(function () {\n        return timeslots[Math.floor(Math.random() * timeslots.length)];\n      })\n    }\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/timeslot.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/timeslot.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/timeslot.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/user', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/image', 'goodcity/tests/factories/mobile'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesImage, _goodcityTestsFactoriesMobile) {\n\n  _emberDataFactoryGuy['default'].define('user', {\n    sequences: {\n      id: function id(num) {\n        return num + 100;\n      },\n      collectionFirstName: function collectionFirstName(num) {\n        return 'Daniel' + num;\n      },\n      collectionLastName: function collectionLastName(num) {\n        return 'Stepp' + num;\n      }\n    },\n    'default': {\n      id: _emberDataFactoryGuy['default'].generate('id'),\n      firstName: _emberDataFactoryGuy['default'].generate('collectionFirstName'),\n      lastName: _emberDataFactoryGuy['default'].generate('collectionLastName'),\n      mobile: _emberDataFactoryGuy['default'].generate(_goodcityTestsFactoriesMobile['default'].hongKong)\n    },\n    user_with_image: {\n      image: _emberDataFactoryGuy['default'].belongsTo('image')\n    }\n  });\n  exports['default'] = {};\n});","define('goodcity/tests/factories/user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/user.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/user.js should pass jshint.');\n  });\n});","define('goodcity/tests/factories/user_profile', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/mobile'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesMobile) {\n\n  _emberDataFactoryGuy['default'].define('user_profile', {\n    sequences: {\n      collectionFirstName: function collectionFirstName(num) {\n        return 'Daniel' + num;\n      },\n      collectionLastName: function collectionLastName(num) {\n        return 'Stepp' + num;\n      }\n    },\n    'default': {\n      firstName: _emberDataFactoryGuy['default'].generate('collectionFirstName'),\n      lastName: _emberDataFactoryGuy['default'].generate('collectionLastName')\n    },\n    with_non_hk_mobile: {\n      mobile: _emberDataFactoryGuy['default'].generate(_goodcityTestsFactoriesMobile['default'].nonHongKong),\n      district_id: 1\n    },\n    with_hk_mobile: {\n      mobile: _emberDataFactoryGuy['default'].generate(_goodcityTestsFactoriesMobile['default'].hongKong),\n      district_id: 2\n    }\n  });\n  exports['default'] = {};\n});","define('goodcity/tests/factories/user_profile.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/user_profile.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/user_profile.js should pass jshint.');\n  });\n});","define(\"goodcity/tests/factories/version\", [\"exports\", \"ember-data-factory-guy\"], function (exports, _emberDataFactoryGuy) {\n  var event_list = [\"create\", \"update\"];\n\n  _emberDataFactoryGuy[\"default\"].define('version', {\n    sequences: {\n      event: function event() {\n        return event_list[Math.floor(Math.random() * event_list.length)];\n      }\n    },\n    \"default\": null\n  });\n\n  exports[\"default\"] = {};\n});","define('goodcity/tests/factories/version.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - factories');\n  QUnit.test('factories/version.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'factories/version.js should pass jshint.');\n  });\n});","define('goodcity/tests/helpers/custom-helpers', ['exports', 'ember-data-factory-guy', 'goodcity/tests/factories/user'], function (exports, _emberDataFactoryGuy, _goodcityTestsFactoriesUser) {\n  exports['default'] = (function () {\n    Ember.Test.registerAsyncHelper('loginUser', function (app, url) {\n      var hk_user;\n      hk_user = _emberDataFactoryGuy['default'].build('with_hk_mobile');\n      var authToken = window.localStorage.authToken;\n      visit(url);\n      fillIn('input#mobile', hk_user.mobile);\n      click($(\"#getsmscode\")[0]);\n      andThen(function () {\n        equal(currentURL(), \"/authenticate\");\n        fillIn('input#pin', \"123456\");\n        click($(\"#submit_pin\")[0]);\n        window.localStorage.authToken = authToken;\n      });\n    });\n\n    Ember.Test.registerAsyncHelper('logoutUser', function (app, url) {\n      visit(url);\n      andThen(function () {\n        var ele_logout = $(\"a:contains('Logout')\");\n        if (ele_logout.length > 0) {\n          click(ele_logout[0]);\n        }\n      });\n    });\n\n    Ember.Test.registerHelper('lookup', function (app, name) {\n      return app.__container__.lookup(name);\n    });\n\n    Ember.Test.registerHelper('runloopFix', function (app, callbackFunction) {\n      var callback = function callback() {\n        Ember.run(callbackFunction);\n      };\n      Ember.run.scheduleOnce('afterRender', this, callback);\n    });\n  })();\n});","define('goodcity/tests/helpers/custom-helpers.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/custom-helpers.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/custom-helpers.js should pass jshint.');\n  });\n});","define('goodcity/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('goodcity/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/destroy-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('goodcity/tests/helpers/ember-i18n/test-helpers', ['exports', 'ember'], function (exports, _ember) {\n\n  // example usage: find(`.header:contains(${t('welcome_message')})`)\n  _ember['default'].Test.registerHelper('t', function (app, key, interpolations) {\n    var i18n = app.__container__.lookup('service:i18n');\n    return i18n.t(key, interpolations);\n  });\n\n  // example usage: expectTranslation('.header', 'welcome_message');\n  _ember['default'].Test.registerHelper('expectTranslation', function (app, element, key, interpolations) {\n    var text = app.testHelpers.t(key, interpolations);\n\n    assertTranslation(element, key, text);\n  });\n\n  var assertTranslation = (function () {\n    if (typeof QUnit !== 'undefined' && typeof ok === 'function') {\n      return function (element, key, text) {\n        ok(find(element + ':contains(' + text + ')').length, 'Found translation key ' + key + ' in ' + element);\n      };\n    } else if (typeof expect === 'function') {\n      return function (element, key, text) {\n        var found = !!find(element + ':contains(' + text + ')').length;\n        expect(found).to.equal(true);\n      };\n    } else {\n      return function () {\n        throw new Error(\"ember-i18n could not find a compatible test framework\");\n      };\n    }\n  })();\n});","define('goodcity/tests/helpers/empty-sync-data-stub', ['exports', 'goodcity/config/environment', 'goodcity/tests/factories/territory', 'goodcity/tests/factories/address', 'goodcity/tests/factories/contact', 'goodcity/tests/factories/schedule', 'goodcity/tests/factories/delivery', 'goodcity/tests/factories/gogovan_order', 'goodcity/tests/factories/offer', 'goodcity/tests/factories/package_type', 'goodcity/tests/factories/package', 'goodcity/tests/factories/donor_condition', 'goodcity/tests/factories/rejection_reason', 'goodcity/tests/factories/permission', 'goodcity/tests/factories/user_profile', 'goodcity/tests/factories/timeslot', 'goodcity/tests/factories/gogovan_transport', 'goodcity/tests/factories/crossroads_transport', 'goodcity/tests/factories/message', 'goodcity/tests/factories/version'], function (exports, _goodcityConfigEnvironment, _goodcityTestsFactoriesTerritory, _goodcityTestsFactoriesAddress, _goodcityTestsFactoriesContact, _goodcityTestsFactoriesSchedule, _goodcityTestsFactoriesDelivery, _goodcityTestsFactoriesGogovan_order, _goodcityTestsFactoriesOffer, _goodcityTestsFactoriesPackage_type, _goodcityTestsFactoriesPackage, _goodcityTestsFactoriesDonor_condition, _goodcityTestsFactoriesRejection_reason, _goodcityTestsFactoriesPermission, _goodcityTestsFactoriesUser_profile, _goodcityTestsFactoriesTimeslot, _goodcityTestsFactoriesGogovan_transport, _goodcityTestsFactoriesCrossroads_transport, _goodcityTestsFactoriesMessage, _goodcityTestsFactoriesVersion) {\n  exports['default'] = function (testHelper) {\n    _goodcityConfigEnvironment['default'].APP.PRELOAD_TYPES.concat(_goodcityConfigEnvironment['default'].APP.PRELOAD_AUTHORIZED_TYPES).forEach(function (type) {\n      testHelper.mockFindAll(type, 0);\n    });\n\n    var data = { \"addresses\": [{ \"id\": 2, \"street\": \"Yasmeen Rapid\", \"flat\": \"Suite 590\", \"building\": \"06932\", \"district_id\": 67, \"addressable_id\": 2, \"addressable_type\": \"User\" }],\n      \"user_profile\": { \"id\": 2, \"first_name\": \"David\", \"last_name\": \"Dara51\", \"mobile\": \"51111111\", \"address_id\": 2, \"image_id\": null, \"permission_id\": null } };\n\n    $.mockjax({ url: \"/api/v1/auth/current_user_profil*\",\n      responseText: data });\n\n    //hide sync-data related mocks from console, but show test related mocks\n    $.mockjaxSettings.logging = false;\n    testHelper.container.lookup(\"router:main\").one('didTransition', function () {\n      $.mockjaxSettings.logging = true;\n    });\n  };\n});","define('goodcity/tests/helpers/empty-sync-data-stub.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/empty-sync-data-stub.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/empty-sync-data-stub.js should pass jshint.');\n  });\n});","define('goodcity/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'goodcity/tests/helpers/start-app', 'goodcity/tests/helpers/destroy-app'], function (exports, _qunit, _goodcityTestsHelpersStartApp, _goodcityTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _goodcityTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _goodcityTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('goodcity/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/module-for-acceptance.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('goodcity/tests/helpers/resolver', ['exports', 'goodcity/resolver', 'goodcity/config/environment'], function (exports, _goodcityResolver, _goodcityConfigEnvironment) {\n\n  var resolver = _goodcityResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _goodcityConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _goodcityConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('goodcity/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('goodcity/tests/helpers/start-app', ['exports', 'ember', 'goodcity/app', 'goodcity/router', 'goodcity/config/environment', 'goodcity/tests/helpers/custom-helpers'], function (exports, _ember, _goodcityApp, _goodcityRouter, _goodcityConfigEnvironment, _goodcityTestsHelpersCustomHelpers) {\n  exports['default'] = startApp;\n\n  function startApp(attrs, permissionId) {\n    //place setting of localStorage variables here so app doesn't cache values from previous tests\n\n    //auth\n    if (permissionId === 2) {\n      window.localStorage.authToken = '\"pas89df7asjknf\"';\n      window.localStorage.currentUserId = '\"3\"';\n    } else if (permissionId === 1) {\n      window.localStorage.authToken = '\"7sakjhf8s6dasd\"';\n      window.localStorage.currentUserId = '\"2\"';\n    } else {\n      window.localStorage.authToken = '\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0MDkwMzgzNjUsImlzcyI6Ikdvb2RDaXR5SEsiLCJleHAiOjE0MTAyNDc5NjUsIm1vYmlsZSI6Iis4NTI2MTA5MjAwMSIsIm90cF9zZWNyZXRfa2V5IjoiemRycGZ4c2VnM3cyeWt2aSJ9.lZQaME1oKw7E5cdfks0jG3A_gxlOZ7VfUVG4IMJbc08\"';\n      window.localStorage.currentUserId = '\"1\"';\n    }\n\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _goodcityConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _goodcityRouter['default'].reopen({\n      location: 'none'\n    });\n\n    _ember['default'].run(function () {\n      application = _goodcityApp['default'].create(attributes);\n      application.__container__.lookup('service:i18n').set(\"locale\", \"en\");\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    window.navigator = { onLine: true, plugins: [] };\n    window.alert = function (message) {\n      console.log(\"Alert: \" + message);\n    };\n    window.confirm = function (message) {\n      console.log(\"Confirm: \" + message);return true;\n    };\n    _ember['default'].$(\"head\").append(\"<style>.loading-indicator, .reveal-modal-bg, .reveal-modal {display:none !important;}</style>\");\n    lookup(\"service:logger\").error = function (message) {\n      return QUnit.assert.equal(message, \"\");\n    };\n\n    //needed by application controller init\n    lookup(\"controller:subscriptions\").actions.wire = function () {};\n\n    return application;\n  }\n});","define('goodcity/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('goodcity/tests/helpers/test-skip', ['exports'], function (exports) {\n  exports['default'] = function () {\n    QUnit.test(arguments[0] + ' (SKIPPED)', function () {\n      QUnit.expect(0); //dont expect any tests\n      var li = document.getElementById(\"qunit-test-output-\" + QUnit.config.current.testId);\n      QUnit.done(function () {\n        li.style.background = '#FFFF99';\n      });\n    });\n  };\n});","define('goodcity/tests/helpers/test-skip.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/test-skip.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/test-skip.js should pass jshint.');\n  });\n});","define('goodcity/tests/mixins/back_navigator.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins');\n  QUnit.test('mixins/back_navigator.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/back_navigator.js should pass jshint.');\n  });\n});","define('goodcity/tests/mixins/scheduled_offers.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - mixins');\n  QUnit.test('mixins/scheduled_offers.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/scheduled_offers.js should pass jshint.');\n  });\n});","define('goodcity/tests/models/location.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/location.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/location.js should pass jshint.');\n  });\n});","define('goodcity/tests/models/package.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/package.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/package.js should pass jshint.');\n  });\n});","define('goodcity/tests/models/package_image.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/package_image.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/package_image.js should pass jshint.');\n  });\n});","define('goodcity/tests/models/package_type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/package_type.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/package_type.js should pass jshint.');\n  });\n});","define('goodcity/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('goodcity/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/authenticate.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/authenticate.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/authenticate.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/finished/cancelled.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/finished');\n  QUnit.test('routes/finished/cancelled.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/finished/cancelled.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/finished/inactive.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/finished');\n  QUnit.test('routes/finished/inactive.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/finished/inactive.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/finished/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/finished');\n  QUnit.test('routes/finished/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/finished/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/finished/received.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/finished');\n  QUnit.test('routes/finished/received.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/finished/received.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/ggv_orders.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/ggv_orders.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/ggv_orders.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/holidays.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/holidays.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/holidays.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/in_progress/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/in_progress');\n  QUnit.test('routes/in_progress/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/in_progress/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/in_progress/reviewed.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/in_progress');\n  QUnit.test('routes/in_progress/reviewed.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/in_progress/reviewed.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/in_progress/reviewing.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/in_progress');\n  QUnit.test('routes/in_progress/reviewing.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/in_progress/reviewing.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/item_types.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/item_types.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/item_types.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/my_list/finished.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/my_list');\n  QUnit.test('routes/my_list/finished.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/my_list/finished.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/my_list/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/my_list');\n  QUnit.test('routes/my_list/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/my_list/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/my_list/reviewed.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/my_list');\n  QUnit.test('routes/my_list/reviewed.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/my_list/reviewed.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/my_list/reviewing.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/my_list');\n  QUnit.test('routes/my_list/reviewing.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/my_list/reviewing.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/my_list/scheduled.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/my_list');\n  QUnit.test('routes/my_list/scheduled.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/my_list/scheduled.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/my_notifications.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/my_notifications.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/my_notifications.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offer/donor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/offer');\n  QUnit.test('routes/offer/donor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offer/donor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offer/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/offer');\n  QUnit.test('routes/offer/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offer/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offer/merge.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/offer');\n  QUnit.test('routes/offer/merge.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offer/merge.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offer/supervisor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/offer');\n  QUnit.test('routes/offer/supervisor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offer/supervisor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offers.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/offers.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offers.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offers/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/offers');\n  QUnit.test('routes/offers/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offers/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offers/receiving.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/offers');\n  QUnit.test('routes/offers/receiving.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offers/receiving.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/offers/submitted.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/offers');\n  QUnit.test('routes/offers/submitted.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/offers/submitted.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/receive_package.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/receive_package.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/receive_package.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/review_item.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_item.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_item/accept.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_item');\n  QUnit.test('routes/review_item/accept.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_item/accept.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_item/donor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_item');\n  QUnit.test('routes/review_item/donor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_item/donor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_item/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_item');\n  QUnit.test('routes/review_item/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_item/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_item/reject.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_item');\n  QUnit.test('routes/review_item/reject.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_item/reject.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_item/supervisor_messages.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_item');\n  QUnit.test('routes/review_item/supervisor_messages.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_item/supervisor_messages.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_offer.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/review_offer.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_offer.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_offer/donor_details.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_offer');\n  QUnit.test('routes/review_offer/donor_details.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_offer/donor_details.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_offer/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_offer');\n  QUnit.test('routes/review_offer/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_offer/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_offer/items.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_offer');\n  QUnit.test('routes/review_offer/items.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_offer/items.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_offer/logistics.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_offer');\n  QUnit.test('routes/review_offer/logistics.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_offer/logistics.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/review_offer/receive.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/review_offer');\n  QUnit.test('routes/review_offer/receive.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/review_offer/receive.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/scheduled/collection.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/scheduled');\n  QUnit.test('routes/scheduled/collection.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/scheduled/collection.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/scheduled/gogovan.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/scheduled');\n  QUnit.test('routes/scheduled/gogovan.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/scheduled/gogovan.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/scheduled/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/scheduled');\n  QUnit.test('routes/scheduled/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/scheduled/index.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/scheduled/other_delivery.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/scheduled');\n  QUnit.test('routes/scheduled/other_delivery.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/scheduled/other_delivery.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/search.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/search.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/search.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/search_label.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/search_label.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/search_label.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/session.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/session.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/session.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/user.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/user.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/user.js should pass jshint.');\n  });\n});","define('goodcity/tests/routes/users.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/users.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/users.js should pass jshint.');\n  });\n});","define('goodcity/tests/test-helper', ['exports', 'goodcity/tests/helpers/resolver', 'ember-qunit'], function (exports, _goodcityTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_goodcityTestsHelpersResolver['default']);\n});","define('goodcity/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('goodcity/tests/unit/models/item-test', ['exports', 'ember-qunit', 'goodcity/tests/helpers/test-skip'], function (exports, _emberQunit, _goodcityTestsHelpersTestSkip) {\n\n  (0, _emberQunit.moduleForModel)('item', 'Item Model', {\n    needs: ['model:item', 'model:image', 'model:package', 'model:message', 'model:offer', 'model:donor_condition', 'model:rejection_reason', 'model:package_type', 'model:user', 'model:delivery', 'model:gogovan_transport', 'model:crossroads_transport']\n  });\n\n  (0, _emberQunit.test)('Item is a valid ember-data Model', function () {\n    expect(1);\n\n    var store = this.store();\n    var record = null;\n\n    Ember.run(function () {\n      store.createRecord('item', { id: 1, state: 'draft', donorDescription: 'test-item' });\n      record = store.peekRecord('item', 1);\n    });\n\n    equal(record.get('donorDescription'), 'test-item');\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])('Default image for item', function () {\n    expect(1);\n\n    var store = this.store();\n    var defaultImageURL = null;\n\n    Ember.run(function () {\n      var record = store.createRecord('item', { state: 'draft', donorDescription: 'test-item' });\n      var image1 = store.createRecord('image', { thumbImageUrl: \"testimage1\" });\n      var image2 = store.createRecord('image', { thumbImageUrl: \"testimage2\", favourite: 'true' });\n\n      record.get('images').pushObject(image1);\n      record.get('images').pushObject(image2);\n\n      defaultImageURL = record.get('defaultImageURL');\n    });\n\n    equal(defaultImageURL, \"testimage2\");\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])('Default image for item when no favourite is selected', function () {\n    expect(1);\n\n    var store = this.store();\n    var defaultImageURL = null;\n\n    Ember.run(function () {\n      var record = store.createRecord('item', { state: 'draft', donorDescription: 'test-item' });\n      var image1 = store.createRecord('image', { thumbImageUrl: \"testimage1\" });\n      var image2 = store.createRecord('image', { thumbImageUrl: \"testimage2\" });\n\n      record.get('images').pushObject(image1);\n      record.get('images').pushObject(image2);\n\n      defaultImageURL = record.get('defaultImageURL');\n    });\n\n    equal(defaultImageURL, \"testimage1\");\n  });\n});","define('goodcity/tests/unit/models/item-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/item-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/item-test.js should pass jshint.');\n  });\n});","define('goodcity/tests/unit/models/offer-test', ['exports', 'ember-qunit', 'ember-data-factory-guy', 'goodcity/tests/helpers/test-skip'], function (exports, _emberQunit, _emberDataFactoryGuy, _goodcityTestsHelpersTestSkip) {\n\n  (0, _emberQunit.moduleForModel)('offer', 'Offer Model', {\n    needs: ['model:item', 'model:message', 'model:package', 'model:image', 'model:donor_condition', 'model:delivery', 'model:user', 'model:schedule', 'model:rejection_reason', 'model:contact', 'model:permission', 'model:gogovan_transport', 'model:crossroads_transport', 'model:package_type', 'model:gogovan_order', 'model:address', 'model:cancellation_reason']\n  });\n\n  (0, _emberQunit.test)('offer is a valid ember-data Model', function () {\n    expect(1);\n\n    var store = this.store();\n    var record = null;\n\n    Ember.run(function () {\n      store.createRecord('offer', { id: 1, collectionContactName: 'Test' });\n      record = store.peekRecord('offer', 1);\n    });\n\n    equal(record.get('collectionContactName'), 'Test');\n  });\n\n  (0, _goodcityTestsHelpersTestSkip['default'])('Count of items within an offer', function () {\n    expect(1);\n\n    var store = this.store();\n\n    Ember.run(function () {\n      var item1 = _emberDataFactoryGuy['default'].make('item', { state: 'draft' });\n      var item2 = _emberDataFactoryGuy['default'].make('item', { state: 'draft' });\n      var offer = _emberDataFactoryGuy['default'].make('offer', { items: [item1.id, item2.id] });\n\n      return store.find('offer', offer.id).then(function (offer1) {\n        offer1.get('items').then(function () {\n          console.log(offer1.get('itemCount'));\n          equal(offer1.get('itemCount'), 2);\n        });\n      });\n    });\n  });\n});","define('goodcity/tests/unit/models/offer-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/offer-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/offer-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('goodcity/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappingspIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}